command /start:
	permission: *
	permission message: &cThis command does not exist
	description: start event
	trigger:
		create a gui with virtual chest inventory with 3 rows named "Are you sure to start the event ?":
			make gui slot 12 with lime wool named "&aYes" with lore "&rI am sure to start the event !":
				close player's inventory
				set {event_timer} to true
				set {timer-s} to 59
				set {timer-m} to 2
				command("gamerule sendCommandFeedback false")
				showBossbar(getBossbarById("count"))
				bossbarRefill("count", {timer-m}*60 + {timer-s}, true)
				set {timer} to 1
				wait 2 tick
				set {checking_finished_players} to 0
				loop all players:
					if loop-player doesn't have permission "group.spectators":
						add 1 to {checking_finished_players}
					if loop-player has permission "theevent580.staff":
						if {debug.%loop-player's uuid%} is true:
							send "[&4Admin&r] Event countdown / Event started by %executor%" to loop-player
							send "[&4Admin&r] Event state : &eWaiting&r --> &aStart Countdown" to loop-player
					send title "<##f0f01c>Event starting" with subtitle "<##f0f01c>in 3 minutes" to loop-player for 3 seconds
				set {event_state} to "Start Countdown"
			make gui slot 14 with red wool named "&cNo" with lore "&rI am not sure to start the event.":
				close player's inventory
		open the last gui for the player

command /spawn [<player>]:
	description: tp to spawn
	trigger:
		if arg-1 is not set:
			if {jeu_condi} is 0 or -1:
				if {timer} or {timer_save} is 7 or 0 or 1 or 9 or 10 or 8 or "Fin":
					if {timer-s} > 3:
						if sender is player:
							if {timer} or {timer_save} = 7:
								send "[&4Admin&r] You cannot tp to spawn while playing a minigame"
								stop trigger
					if player's game mode is spectator:
						teleport player to location(321.5, 75.0, 340.5, world "world", 147.25, 25)
						wait 5 ticks
						set player's game mode to spectator
						command("fly %player% true")
					else if player's game mode is creative:
						teleport player to location(321.5, 75.0, 340.5, world "world", 147.25, 25)
						wait 5 ticks
						set player's game mode to creative
						command("fly %player% true")
					else:
						teleport player to location(310.5, 67.0, 323.5, world "world", 0, 0)
						wait 5 ticks
						set player's game mode to adventure
						command("fly %player% false")
					set player's flying speed to 0.1
					apply infinite saturation without particles whilst hiding the potion icon to player
					set the maximum health of player to 10
					heal player
					command("hide %player% false")
					command("see %player% true")
				else:
					send "[&4Admin&r] You cannot tp to spawn while playing a minigame"
			else:
				send "[&4Admin&r] You cannot tp to spawn while playing a minigame"
		else:
			if sender has permission "group.spectators":
				if {jeu_condi} is 0 or -1:
					if {timer} or {timer_save} is 7 or 0 or 1 or 9 or 8 or 10 or "Fin":
						if {timer-s} > 3:
							if {timer} or {timer_save} = 7:
								send "[&4Admin&r] You cannot tp to spawn while playing a minigame"
								stop trigger
						if arg-1's game mode is spectator:
							teleport arg-1 to location(321.5, 75.0, 340.5, world "world", 147.25, 25)
							wait 5 ticks
							set arg-1's game mode to spectator
							command("fly %arg-1% true")
						else if arg-1's game mode is creative:
							teleport arg-1 to location(321.5, 75.0, 340.5, world "world", 147.25, 25)
							wait 5 ticks
							set arg-1's game mode to creative
							force arg-1 to fly
							command("fly %arg-1% true")
						else:
							teleport arg-1 to location(310.5, 67.0, 323.5, world "world", 0, 0)
							wait 5 ticks
							set arg-1's game mode to adventure
							command("fly %arg-1% false")
						set arg-1's flying speed to 0.1
						apply infinite saturation without particles whilst hiding the potion icon to player
						set the maximum health of arg-1 to 10
						heal arg-1
						command("hide %arg-1% false")
						command("see %arg-1% true")
					else:
						send "[&4Admin&r] You cannot tp to spawn while playing a minigame"
			else:
				send "[&4Admin&r] You cannot tp to spawn while playing a minigame"


command /timer <text> [<text>] [<int>]:
	permission: *
	permission message: &cThis command does not exist
	description: stop / start / set timer
	trigger:
		if arg-1 is "type":
			send "%{timer}%" to player
		if arg-1 is "pause":
			if {timer} is "pause":
				send "[&4Admin&r] Event is already paused"
			else:
				set {timer_save} to {timer}
				set {timer} to "pause"
				set {event_timer} to false
				setBossbarProgress(getBossbarById("count"), 0)
				setBossbarName(getBossbarById("count"), "<#f0f064>惠上为<#f0f068>Event is paused")
				if {jeu_condi} is 5:
					set {race_timer} to true
				broadcast "[<##BCD71D>&lTimer&r] The Event is currently paused, please wait"
		else if arg-1 is "resume":
			set {timer} to {timer_save}
			clear {timer_save}
			set {event_timer} to true
			if {jeu_condi} != 11:
				bossbarRefill("count", {timer-m}*60 + {timer-s})
			else:
				setBossbarName(getBossbarById("count"), "<#f0f068>%{players_alive}% players alive")
			if {jeu_condi} is 5:
				set {courses_boat_timer_status} to true
				set {courses_pied_timer_status} to true
				set {courses_trident_timer_status} to true
			broadcast "[<##BCD71D>&lTimer&r] The Event has resumed !"
		else if arg-1 is "mode":
			set {timer_save} to {timer}
			if arg-2 is set:
				if arg-2 is not "pause":
					set {timer} to arg-2 parsed as an integer
				else:
					set {timer} to arg-2
		else if arg-1 is "set":
			if arg-2 and arg-3 is set:
				set {timer-m} to arg-2 parsed as a integer
				set {timer-s} to arg-3
				bossbarRefill("count", {timer-m}*60 + {timer-s})
			else:
				send "--> /timer set 1 30 ( example )"
		else if arg-1 is "status":
			if arg-2 is set:
				if arg-2 is "set":
					if arg-3 is set:
						set {timer} to arg-3
				else if arg-2 is "Fin":
					set {timer} to arg-2

on tab complete of "/timer":
	set tab completions for position 1 to "type", "pause", "resume", "set" and "status"
	if tab arg-1 = "set":
		clear {_nbs::*}
		loop 21 times:
			add loop-value to {_nbs::*}
		set tab completions for position 2 to {_nbs::*}
		clear {_nbs::*}
		loop 60 times:
			add loop-value to {_nbs::*}
		set tab completions for position 3 to {_nbs::*}
	else if tab arg-1 = "status":
		set tab completions for position 2 to "set" and "Fin"
		if tab arg-2 = "set":
			clear {_nbs::*}
			loop 11 times:
				add loop-value to {_nbs::*}
			set tab completions for position 3 to {_nbs::*}

command /reset:
	permission: *
	permission message: &cThis command does not exist
	description: reset les variables
	trigger:
		create a gui with virtual chest inventory with 3 rows named "Are you sure to reset the event ?":
			make gui slot 12 with lime wool named "&aYes" with lore "&rI am sure to reset the event !":
				close player's inventory
				loop {staff::*}:
					send "[&4Admin&r] Code : 0" to loop-value
					send "[&4Admin&r] Reset started by %executor%" to loop-value
				command("clear @a")
				command("effect clear @a")
				set {event_timer} to false
				resetEventTime({event_timer_second}, {event_timer_minute}, {event_timer_hour}, {event_timer_second_total}, {event_timer_minute_total}, {event_timer_hour_total})
				wait 1 seconds
				set {timer} to 0
				set {l6} to "None"
				set {red} to 0
				command("execute in overworld run fill -2 300 4 2 86 9 minecraft:red_concrete replace minecraft:light_gray_concrete")
				command("execute in overworld run fill -2 300 4 2 86 9 minecraft:red_stained_glass replace minecraft:light_gray_stained_glass")
				set {orange} to 0
				command("execute in overworld run fill -4 300 4 -9 86 9 minecraft:orange_concrete replace minecraft:light_gray_concrete")
				command("execute in overworld run fill -3 300 4 -9 86 9 minecraft:orange_stained_glass replace minecraft:light_gray_stained_glass")
				set {yellow} to 0
				command("execute in overworld run fill -2 300 3 -9 86 -2 minecraft:yellow_concrete replace minecraft:light_gray_concrete")
				command("execute in overworld run fill -2 300 3 -9 86 -2 minecraft:yellow_stained_glass replace minecraft:light_gray_stained_glass")
				set {lime} to 0
				command("execute in overworld run fill -3 300 -3 -9 86 -9 minecraft:lime_concrete replace minecraft:light_gray_concrete")
				command("execute in overworld run fill -3 300 -3 -9 86 -9 minecraft:lime_stained_glass replace minecraft:light_gray_stained_glass")
				set {light_blue} to 0
				command("execute in overworld run fill -2 300 -2 3 86 -9 minecraft:light_blue_concrete replace minecraft:light_gray_concrete")
				command("execute in overworld run fill -2 300 -2 3 86 -9 minecraft:light_blue_stained_glass replace minecraft:light_gray_stained_glass")
				set {blue} to 0
				command("execute in overworld run fill 4 300 -3 9 86 -9 minecraft:blue_concrete replace minecraft:light_gray_concrete")
				command("execute in overworld run fill 4 300 -3 9 86 -9 minecraft:blue_stained_glass replace minecraft:light_gray_stained_glass")
				set {purple} to 0
				command("execute in overworld run fill 3 300 -2 9 86 3 minecraft:purple_concrete replace minecraft:light_gray_concrete")
				command("execute in overworld run fill 3 300 -2 9 86 3 minecraft:purple_stained_glass replace minecraft:light_gray_stained_glass")
				set {pink} to 0
				command("execute in overworld run fill 3 300 3 9 86 9 minecraft:pink_concrete replace minecraft:light_gray_concrete")
				command("execute in overworld run fill 3 300 3 9 86 9 minecraft:pink_stained_glass replace minecraft:light_gray_stained_glass")
				set {white} to 0
				set {light_gray} to 0
				wait 5 ticks
				command("//world world")
				command("//pos1 8,98,-8")
				command("//pos2 -8,99,8")
				command("//replace sticky_piston air")
				command("execute in overworld run fill 8 250 3 -8 250 3 minecraft:polished_deepslate_slab")
				command("execute in overworld run fill 8 250 -3 -8 250 -3 minecraft:polished_deepslate_slab")
				command("execute in overworld run fill -3 250 -8 -3 250 8 minecraft:polished_deepslate_slab")
				command("execute in overworld run fill 3 250 -8 3 250 8 minecraft:polished_deepslate_slab")
				command("execute in overworld run fill 8 249 3 -8 249 3 minecraft:glass")
				command("execute in overworld run fill 8 249 -3 -8 249 -3 minecraft:glass")
				command("execute in overworld run fill -3 249 -8 -3 249 8 minecraft:glass")
				command("execute in overworld run fill 3 249 -8 3 249 8 minecraft:glass")
				command("execute in overworld run fill 8 251 3 -8 251 3 minecraft:air")
				command("execute in overworld run fill 8 251 -3 -8 251 -3 minecraft:air")
				command("execute in overworld run fill -3 251 -8 -3 251 8 minecraft:air")
				command("execute in overworld run fill 3 251 -8 3 251 8 minecraft:air")
				command("//pos1 8,248,-8")
				command("//pos2 -8,248,8")
				command("//replace air sticky_piston[facing=up,extended=false]")
				command("kill @e[type=minecraft:item]")
				command("fill 8 247 3 -8 247 3 minecraft:redstone_block")
				command("fill 8 247 -3 -8 247 -3 minecraft:redstone_block")
				command("fill -3 247 -8 -3 247 8 minecraft:redstone_block")
				command("fill 3 247 -8 3 247 8 minecraft:redstone_block")
				command("fill 8 247 3 -8 247 3 minecraft:redstone_block")
				command("fill 8 247 -3 -8 247 -3 minecraft:redstone_block")
				command("fill -3 247 -8 -3 247 8 minecraft:redstone_block")
				command("fill 3 247 -8 3 247 8 minecraft:redstone_block")
				command("fill 8 253 9 -8 250 -9 air replace minecraft:polished_deepslate")
				command("xp set @a 0 levels")
				command("xp set @a 0 points")
				command("stopsound @a")
				command("bossbar set minecraft:mall visible false")
				set {mute.server} to false
				set {finished_players} to 0
				set {online_players} to 0
				set {checking_finished_players} to 0
				set {damage} to 1
				set {x} to 0.5
				set {y} to 102
				set {z} to 5.5
				set {world} to world
				set {pitch} to 0
				set {yaw} to 0
				set {multiplier} to 1
				set {jeu} to 0
				set {jeu_nom} to "Start"
				set {jeu_condi} to 0
				set {scoreboard.pos} to 0
				set {map_sg} to 0
				set {ready_player} to 0
				clear {maps::*}
				clear {finished::*}
				clear {games::*}
				set {vote_swap} to false
				resetNPCs()
				resetTab()
				resetParkour()
				set {race_timer} to false
				set {race_lap_1_finished} to false
				set {race_lap_2_finished} to false
				set {race_lap_3_finished} to false
				command("bossbar set minecraft:count visible false")
				loop all players:
					set glowing of loop-player to false
					setPlayerColor(loop-player)
					clear {ride.%loop-player's uuid%}
					add 1 to {online_players}
					command("spawn %loop-player%")
					apply infinite saturation without particles whilst hiding the potion icon to loop-player
					set {gamemode.%loop-player's uuid%} to 2
					set {points_game.%loop-player's uuid%} to 0
					set {points.%loop-player's uuid%} to 0
					if {total_points.%loop-player's uuid%} is not set:
						set {total_points.%loop-player's uuid%} to 0
						set {total_points_event.%loop-player's uuid%} to 0
					else:
						remove {total_points_event.%loop-player's uuid%} from {total_points.%loop-player's uuid%}
						set {total_points_event.%loop-player's uuid%} to 0
					#Parkour
					set {parkour_checkpoint.%loop-player's uuid%} to "Start"
					#Multilap
					set {race_checkpoint.%loop-player's uuid%} to 0
					set {race_lap.%loop-player's uuid%} to 1
					set {race_total_time.%loop-player's uuid%} to 0
					set {race_lap_time.%loop-player's uuid%} to 0
					set {race_boat.%loop-player's uuid%} to false
					#Bow PVP
					set {health.%loop-player's uuid%} to 10
					#For Event : 
					if loop-player has permission "group.spectators":
						remove 1 from {online_players}
					set {ready_check.%loop-player's uuid%} to false
					set {ready.%loop-player's uuid%} to true
					#Spawn
					command("gamemode adventure %loop-player%")
					set the maximum health of loop-player to 10
					heal loop-player
					reveal hidden players of loop-player
					if {flag.%loop-player's uuid%} = true:
						set helmet of loop-player to {flag.%loop-player's uuid%}
					if loop-player has permission "theevent580.staff":
						if {debug.%loop-player's uuid%} is true:
							send "[&4Admin&r] Reset ended" to loop-player
							send "[&4Admin&r] Event state : &e%{event_state}%&r --> &aWaiting" to loop-player
				set {event_state} to "Waiting"
				command("gamerule sendCommandFeedback true")
				broadcast "[&4Admin&r] Event has been reset."
			make gui slot 14 with red wool named "&cNo" with lore "&rI am not sure to reset the event.":
				close player's inventory
		open the last gui for the player

command /consolestart:
	permission: *
	permission message: &cThis command does not exist
	description: start event
	trigger:
		set {event_timer} to true
		set {timer-s} to 59
		set {timer-m} to 2
		command("gamerule sendCommandFeedback false")
		command("bossbar set minecraft:count players @a")
		command("bossbar set minecraft:count visible true")
		bossbarRefill("count", {timer-m}*60 + {timer-s}, true)
		set {timer} to 1
		wait 2 tick
		set {checking_finished_players} to 0
		loop all players:
			if loop-player doesn't have permission "group.spectators":
				add 1 to {checking_finished_players}
			if loop-player has permission "theevent580.staff":
				if {debug.%loop-player's uuid%} is true:
					send "[&4Admin&r] Event countdown / Event started by %executor%" to loop-player
					send "[&4Admin&r] Event state : &eWaiting&r --> &aStart Countdown" to loop-player
			send title "<##f0f01c>Event starting" with subtitle "<##f0f01c>in 3 minutes" to loop-player for 3 seconds
		set {event_state} to "Start Countdown"

command /consolereset:
	permission: *
	permission message: &cThis command does not exist
	description: reset event
	trigger:
		loop {staff::*}:
			send "[&4Admin&r] Code : 0" to loop-value
			send "[&4Admin&r] Reset started by %executor%" to loop-value
		command("clear @a")
		command("effect clear @a")
		set {event_timer} to false
		resetEventTime({event_timer_second}, {event_timer_minute}, {event_timer_hour}, {event_timer_second_total}, {event_timer_minute_total}, {event_timer_hour_total})
		wait 1 seconds
		set {timer} to 0
		set {l6} to "None"
		set {red} to 0
		command("execute in overworld run fill -2 300 4 2 86 9 minecraft:red_concrete replace minecraft:light_gray_concrete")
		command("execute in overworld run fill -2 300 4 2 86 9 minecraft:red_stained_glass replace minecraft:light_gray_stained_glass")
		set {orange} to 0
		command("execute in overworld run fill -4 300 4 -9 86 9 minecraft:orange_concrete replace minecraft:light_gray_concrete")
		command("execute in overworld run fill -3 300 4 -9 86 9 minecraft:orange_stained_glass replace minecraft:light_gray_stained_glass")
		set {yellow} to 0
		command("execute in overworld run fill -2 300 3 -9 86 -2 minecraft:yellow_concrete replace minecraft:light_gray_concrete")
		command("execute in overworld run fill -2 300 3 -9 86 -2 minecraft:yellow_stained_glass replace minecraft:light_gray_stained_glass")
		set {lime} to 0
		command("execute in overworld run fill -3 300 -3 -9 86 -9 minecraft:lime_concrete replace minecraft:light_gray_concrete")
		command("execute in overworld run fill -3 300 -3 -9 86 -9 minecraft:lime_stained_glass replace minecraft:light_gray_stained_glass")
		set {light_blue} to 0
		command("execute in overworld run fill -2 300 -2 3 86 -9 minecraft:light_blue_concrete replace minecraft:light_gray_concrete")
		command("execute in overworld run fill -2 300 -2 3 86 -9 minecraft:light_blue_stained_glass replace minecraft:light_gray_stained_glass")
		set {blue} to 0
		command("execute in overworld run fill 4 300 -3 9 86 -9 minecraft:blue_concrete replace minecraft:light_gray_concrete")
		command("execute in overworld run fill 4 300 -3 9 86 -9 minecraft:blue_stained_glass replace minecraft:light_gray_stained_glass")
		set {purple} to 0
		command("execute in overworld run fill 3 300 -2 9 86 3 minecraft:purple_concrete replace minecraft:light_gray_concrete")
		command("execute in overworld run fill 3 300 -2 9 86 3 minecraft:purple_stained_glass replace minecraft:light_gray_stained_glass")
		set {pink} to 0
		command("execute in overworld run fill 3 300 3 9 86 9 minecraft:pink_concrete replace minecraft:light_gray_concrete")
		command("execute in overworld run fill 3 300 3 9 86 9 minecraft:pink_stained_glass replace minecraft:light_gray_stained_glass")
		set {white} to 0
		set {light_gray} to 0
		wait 5 ticks
		command("//world world")
		command("//pos1 8,98,-8")
		command("//pos2 -8,99,8")
		command("//replace sticky_piston air")
		command("execute in overworld run fill 8 250 3 -8 250 3 minecraft:polished_deepslate_slab")
		command("execute in overworld run fill 8 250 -3 -8 250 -3 minecraft:polished_deepslate_slab")
		command("execute in overworld run fill -3 250 -8 -3 250 8 minecraft:polished_deepslate_slab")
		command("execute in overworld run fill 3 250 -8 3 250 8 minecraft:polished_deepslate_slab")
		command("execute in overworld run fill 8 249 3 -8 249 3 minecraft:glass")
		command("execute in overworld run fill 8 249 -3 -8 249 -3 minecraft:glass")
		command("execute in overworld run fill -3 249 -8 -3 249 8 minecraft:glass")
		command("execute in overworld run fill 3 249 -8 3 249 8 minecraft:glass")
		command("execute in overworld run fill 8 251 3 -8 251 3 minecraft:air")
		command("execute in overworld run fill 8 251 -3 -8 251 -3 minecraft:air")
		command("execute in overworld run fill -3 251 -8 -3 251 8 minecraft:air")
		command("execute in overworld run fill 3 251 -8 3 251 8 minecraft:air")
		command("//pos1 8,248,-8")
		command("//pos2 -8,248,8")
		command("//replace air sticky_piston[facing=up,extended=false]")
		command("kill @e[type=minecraft:item]")
		command("fill 8 247 3 -8 247 3 minecraft:redstone_block")
		command("fill 8 247 -3 -8 247 -3 minecraft:redstone_block")
		command("fill -3 247 -8 -3 247 8 minecraft:redstone_block")
		command("fill 3 247 -8 3 247 8 minecraft:redstone_block")
		command("fill 8 247 3 -8 247 3 minecraft:redstone_block")
		command("fill 8 247 -3 -8 247 -3 minecraft:redstone_block")
		command("fill -3 247 -8 -3 247 8 minecraft:redstone_block")
		command("fill 3 247 -8 3 247 8 minecraft:redstone_block")
		command("fill 8 253 9 -8 250 -9 air replace minecraft:polished_deepslate")
		command("xp set @a 0 levels")
		command("xp set @a 0 points")
		command("stopsound @a")
		command("bossbar set minecraft:mall visible false")
		set {mute.server} to false
		set {finished_players} to 0
		set {online_players} to 0
		set {checking_finished_players} to 0
		set {damage} to 1
		set {x} to 0.5
		set {y} to 102
		set {z} to 5.5
		set {world} to world
		set {pitch} to 0
		set {yaw} to 0
		set {multiplier} to 1
		set {jeu} to 0
		set {jeu_nom} to "Start"
		set {jeu_condi} to 0
		set {scoreboard.pos} to 0
		set {map_sg} to 0
		set {ready_player} to 0
		clear {maps::*}
		clear {finished::*}
		clear {games::*}
		set {vote_swap} to false
		resetNPCs()
		resetTab()
		resetParkour()
		set {race_timer} to false
		set {race_lap_1_finished} to false
		set {race_lap_2_finished} to false
		set {race_lap_3_finished} to false
		command("bossbar set minecraft:count visible false")
		loop all players:
			set glowing of loop-player to false
			setPlayerColor(loop-player)
			clear {ride.%loop-player's uuid%}
			add 1 to {online_players}
			command("spawn %loop-player%")
			apply infinite saturation without particles whilst hiding the potion icon to loop-player
			set {gamemode.%loop-player's uuid%} to 2
			set {points_game.%loop-player's uuid%} to 0
			set {points.%loop-player's uuid%} to 0
			if {total_points.%loop-player's uuid%} is not set:
				set {total_points.%loop-player's uuid%} to 0
				set {total_points_event.%loop-player's uuid%} to 0
			else:
				remove {total_points_event.%loop-player's uuid%} from {total_points.%loop-player's uuid%}
				set {total_points_event.%loop-player's uuid%} to 0
			#Parkour
			set {parkour_checkpoint.%loop-player's uuid%} to "Start"
			#Multilap
			set {race_checkpoint.%loop-player's uuid%} to 0
			set {race_lap.%loop-player's uuid%} to 1
			set {race_total_time.%loop-player's uuid%} to 0
			set {race_lap_time.%loop-player's uuid%} to 0
			set {race_boat.%loop-player's uuid%} to false
			#Bow PVP
			set {health.%loop-player's uuid%} to 10
			#For Event : 
			if loop-player has permission "group.spectators":
				remove 1 from {online_players}
			set {ready_check.%loop-player's uuid%} to false
			set {ready.%loop-player's uuid%} to true
			#Spawn
			command("gamemode adventure %loop-player%")
			set the maximum health of loop-player to 10
			heal loop-player
			reveal hidden players of loop-player
			if {flag.%loop-player's uuid%} = true:
				set helmet of loop-player to {flag.%loop-player's uuid%}
			if loop-player has permission "theevent580.staff":
				if {debug.%loop-player's uuid%} is true:
					send "[&4Admin&r] Reset ended" to loop-player
					send "[&4Admin&r] Event state : &e%{event_state}%&r --> &aWaiting" to loop-player
		set {event_state} to "Waiting"
		command("gamerule sendCommandFeedback true")
		broadcast "[&4Admin&r] Event has been reset."

command /parkour:
	permission: *
	permission message: &cThis command does not exist
	description: set le jeu "Parkour"
	trigger:
		command("execute in minecraft:parkour run tp @a 131.5 129.00 201.5 -90 0")
		set {jeu_condi} to 2
		set {jeu_logo} to "" #Parkour Logo (\uE002)
		set {finished_players} to 0
		wait 2 seconds
		set gamemode of all players to adventure
		loop all players:
			command("hide %loop-player% true")
			if loop-player doesn't have permission "group.spectators":
				set {points_game.%loop-player's uuid%} to round(120*{multiplier}) #everyone starts with 120 coins
				set {game_multiplier.%loop-player's uuid%} to 1.0 # everyone starts with a x1.0 multiplier
				set {parkour.next_level_coord.%loop-player's uuid%} to 155
				set {parkour.main_level.%loop-player's uuid%} to 1
				set {parkour.sub_level.%loop-player's uuid%} to 1
				set {_item} to carrot on a stick
				apply custom model data to {_item}:
					strings: "skip_level"
				set the name of {_item} to "&r&6Skip Level"
				set slot 7 of loop-player to {_item}
				set {parkour.skip.%loop-player's uuid%} to false
				set {parkour.skip_used.%loop-player's uuid%} to false
				set {finished.%loop-player's uuid%} to false
			else:
				set {finished.%loop-player's uuid%} to true
				clear loop-player's inventory
				setToSpec(loop-player)
			set {gamemode.%loop-player's uuid%} to 2


command /bingo:
	permission: *
	permission message: &cThis command does not exist
	description: set le jeu "Bingo"
	trigger:
		command("execute in minecraft:bingo run tp @a 999899.00 140.00 -999831.5 180 0")
		set {jeu_condi} to 3
		set {jeu_logo} to "" #Bingo Logo (\uE003)
		set {finished_players} to 0
		set {damage} to 2
		command("clear @a")
		loop all players:
			if loop-player has permission "group.spectators":
				reveal hidden players of loop-player
				force loop-player to fly
				allow fly for loop-player
				hide loop-player from all entities
		loop all players:
			loop 5 times:
				set slot 0 of loop-player to iron sword of unbreaking 250 and sharpness 1 named "&eIron sword"
				set slot 1 of loop-player to iron axe of unbreaking 250 and efficiency 2 named "&eIron axe"
				set slot 2 of loop-player to iron pickaxe of unbreaking 250 and efficiency 2 and fortune 2 named "&eFortune iron pickaxe"
				set slot 3 of loop-player to iron pickaxe of unbreaking 250 and efficiency 2 and silk touch named "&eSilk touch iron pickaxe"
				set slot 4 of loop-player to iron shovel of unbreaking 250 and efficiency 2 named "&eIron shovel"
				set slot 6 of loop-player to 64 cooked beef named "&eSteak"
				set helmet of loop-player to chainmail helmet of unbreaking 250 named "&eChainmail helmet"
				set chestplate of loop-player to chainmail chestplate of unbreaking 250 named "&eChainmail chestplate"
				set leggings of loop-player to chainmail leggings of unbreaking 250  named "&eChainmail leggings"
				set boots of loop-player to chainmail boots of unbreaking 250 named "&eChainmail boots"
				set {bingo_cases.%loop-player's uuid%} to 0
				set {bingo_case_1.%loop-player's uuid%} to 0
				set {bingo_case_2.%loop-player's uuid%} to 0
				set {bingo_case_3.%loop-player's uuid%} to 0
				set {bingo_case_4.%loop-player's uuid%} to 0
				set {bingo_case_5.%loop-player's uuid%} to 0
				set {bingo_case_6.%loop-player's uuid%} to 0
				set {bingo_case_7.%loop-player's uuid%} to 0
				set {bingo_case_8.%loop-player's uuid%} to 0
				set {bingo_case_9.%loop-player's uuid%} to 0
				set {bingo_fin.%loop-player's uuid%} to false
				set {bingo_kill.%loop-player's uuid%} to false
				set {finished.%loop-player's uuid%} to false
				wait 5 ticks
				set loop-player's gamemode to adventure
				set {_item} to carrot on a stick
				apply custom model data to {_item}:
					strings: "bingo_house"
				set the name of {_item} to "&r&eTeleport to Home"
				set slot 7 of loop-player to {_item}
				set slot 8 of loop-player to paper named "&eYour Bingo card"
		set {bingo_all_cases} to 0
		set {bingo_case_1_completed} to 0
		set {bingo_case_2_completed} to 0
		set {bingo_case_3_completed} to 0
		set {bingo_case_4_completed} to 0
		set {bingo_case_5_completed} to 0
		set {bingo_case_6_completed} to 0
		set {bingo_case_7_completed} to 0
		set {bingo_case_8_completed} to 0
		set {bingo_case_9_completed} to 0
		set {bingo_case_1_1} to false
		set {bingo_case_2_1} to false
		set {bingo_case_3_1} to false
		set {bingo_case_4_1} to false
		set {bingo_case_5_1} to false
		set {bingo_case_6_1} to false
		set {bingo_case_7_1} to false
		set {bingo_case_8_1} to false
		set {bingo_case_9_1} to false
		set {bingo_fin} to false
		set {pts_lvl_1} to 5*{checking_finished_players}
		set {pts_lvl_1} to round({pts_lvl_1}*{multiplier})
		set {pts_lvl_2} to 15*{checking_finished_players}
		set {pts_lvl_2} to round({pts_lvl_2}*{multiplier})
		set {pts_lvl_3} to 25*{checking_finished_players}
		set {pts_lvl_3} to round({pts_lvl_3}*{multiplier})
		set {pts_lvl_4} to 35*{checking_finished_players}
		set {pts_lvl_4} to round({pts_lvl_4}*{multiplier})
		set {pts_lvl_5} to 45*{checking_finished_players}
		set {pts_lvl_5} to round({pts_lvl_5}*{multiplier})
		set {pts_lvl_6} to 55*{checking_finished_players}
		set {pts_lvl_6} to round({pts_lvl_6}*{multiplier})
		set {pts_lvl_7} to 70*{checking_finished_players}
		set {pts_lvl_7} to round({pts_lvl_7}*{multiplier})
		set {pts_lvl_8} to 85*{checking_finished_players}
		set {pts_lvl_8} to round({pts_lvl_8}*{multiplier})
		set {pts_lvl_9} to 100*{checking_finished_players}
		set {pts_lvl_9} to round({pts_lvl_9}*{multiplier})
		command("//world bingo")
		command("//pos1 999880,139,-999848")
		command("//pos2 999915,149,-999814")
		command("//walls barrier")
		loop all players:
			if loop-player has permission "group.spectators":
				clear loop-player's inventory
				setToSpec(loop-player)
				set {_item} to carrot on a stick
				apply custom model data to {_item}:
					strings: "bingo_house"
				set the name of {_item} to "&r&eTeleport to Home"
				set slot 7 of loop-player to {_item}
				set slot 8 of loop-player to paper named "&eYour Bingo card"
				set {finished.%loop-player's uuid%} to true

command /card:
	description: ouvre la carte
	trigger:
		if player doesn't have permission "group.spectators":
			if {jeu_condi} is 3:
				create a gui with virtual chest inventory with 3 rows named "&eYour card":
					if {bingo_case_1.%player's uuid%} is 0:
						if ({bingo_case_1_completed} / {checking_finished_players})*100 = 0:
							make gui slot 3 with dried kelp named "&2Dried Kelp | %{bingo_case_1_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_1}%&f 工"
						else if ({bingo_case_1_completed} / {checking_finished_players})*100 < 33.3:
							make gui slot 3 with dried kelp named "&aDried Kelp | %{bingo_case_1_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_1}%&f 工"
						else if ({bingo_case_1_completed} / {checking_finished_players})*100 < 66.6:
							make gui slot 3 with dried kelp named "&6Dried Kelp | %{bingo_case_1_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_1}%&f 工"
						else if {bingo_case_1_completed}+1 = {checking_finished_players}:
							make gui slot 3 with dried kelp named "&4Dried Kelp | %{bingo_case_1_completed}% collected" with lore "&4No more coins are being awarded"
						else:
							make gui slot 3 with dried kelp named "&cDried Kelp | %{bingo_case_1_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_1}%&f 工"
					else:
						if {bingo_case_1.%player's uuid%} = 1:
							make gui slot 3 with dried kelp named "&2Dried Kelp | Collected in %{bingo_case_1.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_1.%player's uuid%} / {checking_finished_players})*100 < 33.3:
							make gui slot 3 with dried kelp named "&aDried Kelp | Collected in %{bingo_case_1.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_1.%player's uuid%} / {checking_finished_players})*100 < 66.6:
							make gui slot 3 with dried kelp named "&6Dried Kelp | Collected in %{bingo_case_1.%player's uuid%}%/%{checking_finished_players}%"
						else if {bingo_case_1.%player's uuid%} = {checking_finished_players}:
							make gui slot 3 with dried kelp named "&4Dried Kelp | Collected in %{bingo_case_1.%player's uuid%}%/%{checking_finished_players}%"
						else:
							make gui slot 3 with dried kelp named "&cDried Kelp | Collected in %{bingo_case_1.%player's uuid%}%/%{checking_finished_players}%"
					if {bingo_case_2.%player's uuid%} is 0:
						if ({bingo_case_2_completed} / {checking_finished_players})*100 = 0:
							make gui slot 4 with bread named "&2Bread | %{bingo_case_2_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_2}%&f 工"
						else if ({bingo_case_2_completed} / {checking_finished_players})*100 < 33.3:
							make gui slot 4 with bread named "&aBread | %{bingo_case_2_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_2}%&f 工"
						else if ({bingo_case_2_completed} / {checking_finished_players})*100 < 66.6:
							make gui slot 4 with bread named "&6Bread | %{bingo_case_2_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_2}%&f 工"
						else if {bingo_case_2_completed}+1 = {checking_finished_players}:
							make gui slot 4 with bread named "&4Bread | %{bingo_case_2_completed}% collected" with lore "&4No more coins are being awarded"
						else:
							make gui slot 4 with bread named "&cBread | %{bingo_case_2_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_2}%&f 工"
					else:
						if {bingo_case_2.%player's uuid%} = 1:
							make gui slot 4 with bread named "&2Bread | Collected in %{bingo_case_2.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_2.%player's uuid%} / {checking_finished_players})*100 < 33.3:
							make gui slot 4 with bread named "&aBread | Collected in %{bingo_case_2.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_2.%player's uuid%} / {checking_finished_players})*100 < 66.6:
							make gui slot 4 with bread named "&6Bread | Collected in %{bingo_case_2.%player's uuid%}%/%{checking_finished_players}%"
						else if {bingo_case_2.%player's uuid%} = {checking_finished_players}:
							make gui slot 4 with bread named "&4Bread | Collected in %{bingo_case_2.%player's uuid%}%/%{checking_finished_players}%"
						else:
							make gui slot 4 with dried kelp named "&cBread | Collected in %{bingo_case_2.%player's uuid%}%/%{checking_finished_players}%"
					if {bingo_case_3.%player's uuid%} is 0:
						if ({bingo_case_3_completed} / {checking_finished_players})*100 = 0:
							make gui slot 5 with netherrack named "&2Netherrack | %{bingo_case_3_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_3}%&f 工"
						else if ({bingo_case_3_completed} / {checking_finished_players})*100 < 33.3:
							make gui slot 5 with netherrack named "&aNetherrack | %{bingo_case_3_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_3}%&f 工"
						else if ({bingo_case_3_completed} / {checking_finished_players})*100 < 66.6:
							make gui slot 5 with netherrack named "&6Netherrack | %{bingo_case_3_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_3}%&f 工"
						else if {bingo_case_3_completed}+1 = {checking_finished_players}:
							make gui slot 5 with netherrack named "&4Netherrack | %{bingo_case_3_completed}% collected" with lore "&4No more coins are being awarded"
						else:
							make gui slot 5 with netherrack named "&cNetherrack | %{bingo_case_3_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_3}%&f 工"
					else:
						if {bingo_case_3.%player's uuid%} = 1:
							make gui slot 5 with netherrack named "&2Netherrack | Collected in %{bingo_case_3.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_3.%player's uuid%} / {checking_finished_players})*100 < 33.3:
							make gui slot 5 with netherrack named "&aNetherrack | Collected in %{bingo_case_3.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_3.%player's uuid%} / {checking_finished_players})*100 < 66.6:
							make gui slot 5 with netherrack named "&6Netherrack | Collected in %{bingo_case_3.%player's uuid%}%/%{checking_finished_players}%"
						else if {bingo_case_3.%player's uuid%} = {checking_finished_players}:
							make gui slot 5 with netherrack named "&4Netherrack | Collected in %{bingo_case_3.%player's uuid%}%/%{checking_finished_players}%"
						else:
							make gui slot 5 with netherrack named "&cNetherrack | Collected in %{bingo_case_3.%player's uuid%}%/%{checking_finished_players}%"
					if {bingo_case_4.%player's uuid%} is 0:
						if ({bingo_case_4_completed} / {checking_finished_players})*100 = 0:
							make gui slot 12 with scaffolding named "&2Scaffolding | %{bingo_case_4_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_4}%&f 工"
						else if ({bingo_case_4_completed} / {checking_finished_players})*100 < 33.3:
							make gui slot 12 with scaffolding named "&aScaffolding | %{bingo_case_4_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_4}%&f 工"
						else if ({bingo_case_4_completed} / {checking_finished_players})*100 < 66.6:
							make gui slot 12 with scaffolding named "&6Scaffolding | %{bingo_case_4_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_4}%&f 工"
						else if {bingo_case_4_completed}+1 = {checking_finished_players}:
							make gui slot 12 with scaffolding named "&4Scaffolding | %{bingo_case_4_completed}% collected" with lore "&4No more coins are being awarded"
						else:
							make gui slot 12 with scaffolding named "&cScaffolding | %{bingo_case_4_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_4}%&f 工"
					else:
						if {bingo_case_4.%player's uuid%} = 1:
							make gui slot 12 with scaffolding named "&2Scaffolding | Collected in %{bingo_case_4.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_4.%player's uuid%} / {checking_finished_players})*100 < 33.3:
							make gui slot 12 with scaffolding named "&aScaffolding | Collected in %{bingo_case_4.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_4.%player's uuid%} / {checking_finished_players})*100 < 66.6:
							make gui slot 12 with scaffolding named "&6Scaffolding | Collected in %{bingo_case_4.%player's uuid%}%/%{checking_finished_players}%"
						else if {bingo_case_4.%player's uuid%} = {checking_finished_players}:
							make gui slot 12 with scaffolding named "&4Scaffolding | Collected in %{bingo_case_4.%player's uuid%}%/%{checking_finished_players}%"
						else:
							make gui slot 12 with scaffolding named "&cScaffolding | Collected in %{bingo_case_4.%player's uuid%}%/%{checking_finished_players}%"
					if {bingo_case_5.%player's uuid%} is 0:
						if ({bingo_case_5_completed} / {checking_finished_players})*100 = 0:
							make gui slot 13 with pumpkin pie named "&2Pumpkin Pie | %{bingo_case_5_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_5}%&f 工"
						else if ({bingo_case_5_completed} / {checking_finished_players})*100 < 33.3:
							make gui slot 13 with pumpkin pie named "&aPumpkin Pie | %{bingo_case_5_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_5}%&f 工"
						else if ({bingo_case_5_completed} / {checking_finished_players})*100 < 66.6:
							make gui slot 13 with pumpkin pie named "&6Pumpkin Pie | %{bingo_case_5_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_5}%&f 工"
						else if {bingo_case_5_completed}+1 = {checking_finished_players}:
							make gui slot 13 with pumpkin pie named "&4Pumpkin Pie | %{bingo_case_5_completed}% collected" with lore "&4No more coins are being awarded"
						else:
							make gui slot 13 with pumpkin pie named "&cPumpkin Pie | %{bingo_case_5_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_5}%&f 工"
					else:
						if {bingo_case_5.%player's uuid%} = 1:
							make gui slot 13 with pumpkin pie named "&2Pumpkin Pie | Collected in %{bingo_case_5.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_5.%player's uuid%} / {checking_finished_players})*100 < 33.3:
							make gui slot 13 with pumpkin pie named "&aPumpkin Pie | Collected in %{bingo_case_5.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_5.%player's uuid%} / {checking_finished_players})*100 < 66.6:
							make gui slot 13 with pumpkin pie named "&6Pumpkin Pie | Collected in %{bingo_case_5.%player's uuid%}%/%{checking_finished_players}%"
						else if {bingo_case_5.%player's uuid%} = {checking_finished_players}:
							make gui slot 13 with pumpkin pie named "&4Pumpkin Pie | Collected in %{bingo_case_5.%player's uuid%}%/%{checking_finished_players}%"
						else:
							make gui slot 13 with pumpkin pie named "&cPumpkin Pie | Collected in %{bingo_case_5.%player's uuid%}%/%{checking_finished_players}%"
					if {bingo_case_6.%player's uuid%} is 0:
						if ({bingo_case_6_completed} / {checking_finished_players})*100 = 0:
							make gui slot 14 with muddy mangrove roots named "&2Muddy Mangrove Roots | %{bingo_case_6_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_6}%&f 工"
						else if ({bingo_case_6_completed} / {checking_finished_players})*100 < 33.3:
							make gui slot 14 with muddy mangrove roots named "&aMuddy Mangrove Roots | %{bingo_case_6_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_6}%&f 工"
						else if ({bingo_case_6_completed} / {checking_finished_players})*100 < 66.6:
							make gui slot 14 with muddy mangrove roots named "&6Muddy Mangrove Roots | %{bingo_case_6_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_6}%&f 工"
						else if {bingo_case_6_completed}+1 = {checking_finished_players}:
							make gui slot 14 with muddy mangrove roots named "&4Muddy Mangrove Roots | %{bingo_case_6_completed}% collected" with lore "&4No more coins are being awarded"
						else:
							make gui slot 14 with muddy mangrove roots named "&cMuddy Mangrove Roots | %{bingo_case_6_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_6}%&f 工"
					else:
						if {bingo_case_6.%player's uuid%} = 1:
							make gui slot 14 with muddy mangrove roots named "&2Muddy Mangrove Roots | Collected in %{bingo_case_6.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_6.%player's uuid%} / {checking_finished_players})*100 < 33.3:
							make gui slot 14 with muddy mangrove roots named "&aMuddy Mangrove Roots | Collected in %{bingo_case_6.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_6.%player's uuid%} / {checking_finished_players})*100 < 66.6:
							make gui slot 14 with muddy mangrove roots named "&6Muddy Mangrove Roots | Collected in %{bingo_case_6.%player's uuid%}%/%{checking_finished_players}%"
						else if {bingo_case_6.%player's uuid%} = {checking_finished_players}:
							make gui slot 14 with muddy mangrove roots named "&4Muddy Mangrove Roots | Collected in %{bingo_case_6.%player's uuid%}%/%{checking_finished_players}%"
						else:
							make gui slot 14 with muddy mangrove roots named "&cMuddy Mangrove Roots | Collected in %{bingo_case_6.%player's uuid%}%/%{checking_finished_players}%"
					if {bingo_case_7.%player's uuid%} is 0:
						if ({bingo_case_7_completed} / {checking_finished_players})*100 = 0:
							make gui slot 21 with light gray glazed terracotta named "&2Light Gray Glazed Terracotta | %{bingo_case_7_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_7}%&f 工"
						else if ({bingo_case_7_completed} / {checking_finished_players})*100 < 33.3:
							make gui slot 21 with light gray glazed terracotta named "&aLight Gray Glazed Terracotta | %{bingo_case_7_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_7}%&f 工"
						else if ({bingo_case_7_completed} / {checking_finished_players})*100 < 66.6:
							make gui slot 21 with light gray glazed terracotta named "&6Light Gray Glazed Terracotta | %{bingo_case_7_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_7}%&f 工"
						else if {bingo_case_7_completed}+1 = {checking_finished_players}:
							make gui slot 21 with light gray glazed terracotta named "&4Light Gray Glazed Terracotta | %{bingo_case_7_completed}% collected" with lore "&4No more coins are being awarded"
						else:
							make gui slot 21 with light gray glazed terracotta named "&cLight Gray Glazed Terracotta | %{bingo_case_7_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_7}%&f 工"
					else:
						if {bingo_case_7.%player's uuid%} = 1:
							make gui slot 21 with light gray glazed terracotta named "&2Light Gray Glazed Terracotta | Collected in %{bingo_case_7.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_7.%player's uuid%} / {checking_finished_players})*100 < 33.3:
							make gui slot 21 with light gray glazed terracotta named "&aLight Gray Glazed Terracotta | Collected in %{bingo_case_7.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_7.%player's uuid%} / {checking_finished_players})*100 < 66.6:
							make gui slot 21 with light gray glazed terracotta named "&6Light Gray Glazed Terracotta | Collected in %{bingo_case_7.%player's uuid%}%/%{checking_finished_players}%"
						else if {bingo_case_7.%player's uuid%} = {checking_finished_players}:
							make gui slot 21 with light gray glazed terracotta named "&4Light Gray Glazed Terracotta | Collected in %{bingo_case_7.%player's uuid%}%/%{checking_finished_players}%"
						else:
							make gui slot 21 with light gray glazed terracotta named "&cLight Gray Glazed Terracotta | Collected in %{bingo_case_7.%player's uuid%}%/%{checking_finished_players}%"
					if {bingo_case_8.%player's uuid%} is 0:
						if ({bingo_case_8_completed} / {checking_finished_players})*100 = 0:
							make gui slot 22 with dead brain coral fan named "&2Dead Brain Coral Fan | %{bingo_case_8_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_8}%&f 工"
						else if ({bingo_case_8_completed} / {checking_finished_players})*100 < 33.3:
							make gui slot 22 with dead brain coral fan named "&aDead Brain Coral Fan | %{bingo_case_8_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_8}%&f 工"
						else if ({bingo_case_8_completed} / {checking_finished_players})*100 < 66.68:
							make gui slot 22 with dead brain coral fan named "&6Dead Brain Coral Fan | %{bingo_case_8_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_8}%&f 工"
						else if {bingo_case_8_completed}+1 = {checking_finished_players}:
							make gui slot 22 with dead brain coral fan named "&4Dead Brain Coral Fan | %{bingo_case_8_completed}% collected" with lore "&4No more coins are being awarded"
						else:
							make gui slot 22 with dead brain coral fan named "&cDead Brain Coral Fan | %{bingo_case_8_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_8}%&f 工"
					else:
						if {bingo_case_8.%player's uuid%} = 1:
							make gui slot 22 with dead brain coral fan named "&2Dead Brain Coral Fan | Collected in %{bingo_case_8.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_8.%player's uuid%} / {checking_finished_players})*100 < 33.3:
							make gui slot 22 with dead brain coral fan named "&aDead Brain Coral Fan | Collected in %{bingo_case_8.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_8.%player's uuid%} / {checking_finished_players})*100 < 66.6:
							make gui slot 22 with dead brain coral fan named "&6Dead Brain Coral Fan | Collected in %{bingo_case_8.%player's uuid%}%/%{checking_finished_players}%"
						else if {bingo_case_8.%player's uuid%} = {checking_finished_players}:
							make gui slot 22 with dead brain coral fan named "&4Dead Brain Coral Fan | Collected in %{bingo_case_8.%player's uuid%}%/%{checking_finished_players}%"
						else:
							make gui slot 22 with dead brain coral fan named "&cDead Brain Coral Fan | Collected in %{bingo_case_8.%player's uuid%}%/%{checking_finished_players}%"
					if {bingo_case_9.%player's uuid%} is 0:
						if ({bingo_case_9_coempleted} / {checking_finished_players})*100 = 0:
							make gui slot 23 with sponge named "&2Sponge | %{bingo_case_9_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_9}%&f 工"
						else if ({bingo_cas_9_completed} / {checking_finished_players})*100 < 33.3:
							make gui slot 23 with sponge named "&aSponge | %{bingo_case_9_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_9}%&f 工"
						else if ({bingo_case_9_completed} / {checking_finished_players})*100 < 66.68:
							make gui slot 23 with sponge named "&6Sponge | %{bingo_case_9_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_9}%&f 工"
						else if {bingo_case_9_completed}+1 = {checking_finished_players}:
							make gui slot 23 with sponge named "&4Sponge | %{bingo_case_9_completed}% collected" with lore "&4No more coins are being awarded"
						else:
							make gui slot 23 with sponge named "&cSponge | %{bingo_case_9_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_9}%&f 工"
					else:
						if {bingo_case_9.%player's uuid%} = 1:
							make gui slot 23 with sponge named "&2Sponge | Collected in %{bingo_case_9.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_9.%player's uuid%} / {checking_finished_players})*100 < 33.3:
							make gui slot 23 with sponge named "&aSponge | Collected in %{bingo_case_9.%player's uuid%}%/%{checking_finished_players}%"
						else if ({bingo_case_9.%player's uuid%} / {checking_finished_players})*100 < 66.6:
							make gui slot 23 with sponge named "&6Sponge | Collected in %{bingo_case_9.%player's uuid%}%/%{checking_finished_players}%"
						else if {bingo_case_9.%player's uuid%} = {checking_finished_players}:
							make gui slot 23 with sponge named "&4Sponge | Collected in %{bingo_case_9.%player's uuid%}%/%{checking_finished_players}%"
						else:
							make gui slot 23 with sponge named "&cSponge | Collected in %{bingo_case_9.%player's uuid%}%/%{checking_finished_players}%"
				open the last gui for the player
			else:
				send "[&eBingo&r] Sorry, but you are not in &eBingo&r yet, so you are not allowed to see the &eBingo&r card"
		else:
			create a gui with virtual chest inventory with 3 rows named "&eSpec card":
				if ({bingo_case_1_completed} / {checking_finished_players})*100 = 0:
					make gui slot 3 with dried kelp named "&2Dried Kelp | %{bingo_case_1_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_1}%&f 工"
				else if ({bingo_case_1_completed} / {checking_finished_players})*100 < 33.3:
					make gui slot 3 with dried kelp named "&aDried Kelp | %{bingo_case_1_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_1}%&f 工"
				else if ({bingo_case_1_completed} / {checking_finished_players})*100 < 66.6:
					make gui slot 3 with dried kelp named "&6Dried Kelp | %{bingo_case_1_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_1}%&f 工"
				else if ({bingo_case_1_completed} / {checking_finished_players})*100 < 100:
					make gui slot 3 with dried kelp named "&cDried Kelp | %{bingo_case_1_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_1}%&f 工"
				else:
					make gui slot 3 with dried kelp named "&4Dried Kelp | All collected" with lore "&4No more coins are being awarded"
				if ({bingo_case_2_completed} / {checking_finished_players})*100 = 0:
					make gui slot 4 with bread named "&2Bread | %{bingo_case_2_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_2}%&f 工"
				else if ({bingo_case_2_completed} / {checking_finished_players})*100 < 33.3:
					make gui slot 4 with bread named "&aBread | %{bingo_case_2_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_2}%&f 工"
				else if ({bingo_case_2_completed} / {checking_finished_players})*100 < 66.6:
					make gui slot 4 with bread named "&6Bread | %{bingo_case_2_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_2}%&f 工"
				else if ({bingo_case_2_completed} / {checking_finished_players})*100 < 100:
					make gui slot 4 with bread named "&cBread | %{bingo_case_2_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_2}%&f 工"
				else:
					make gui slot 4 with bread named "&4Bread | All collected" with lore "&4No more coins are being awarded"
				if ({bingo_case_3_completed} / {checking_finished_players})*100 = 0:
					make gui slot 5 with netherrack named "&2Netherrack | %{bingo_case_3_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_3}%&f 工"
				else if ({bingo_case_3_completed} / {checking_finished_players})*100 < 33.3:
					make gui slot 5 with netherrack named "&aNetherrack | %{bingo_case_3_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_3}%&f 工"
				else if ({bingo_case_3_completed} / {checking_finished_players})*100 < 66.6:
					make gui slot 5 with netherrack named "&6Netherrack | %{bingo_case_3_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_3}%&f 工"
				else if ({bingo_case_3_completed} / {checking_finished_players})*100 < 100:
					make gui slot 5 with netherrack named "&cNetherrack | %{bingo_case_3_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_3}%&f 工"
				else:
					make gui slot 5 with netherrack named "&4Netherrack | All collected" with lore "&4No more coins are being awarded"
				if ({bingo_case_4_completed} / {checking_finished_players})*100 = 0:
					make gui slot 12 with scaffolding named "&2Scaffolding | %{bingo_case_4_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_4}%&f 工"
				else if ({bingo_case_4_completed} / {checking_finished_players})*100 < 33.3:
					make gui slot 12 with scaffolding named "&aScaffolding | %{bingo_case_4_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_4}%&f 工"
				else if ({bingo_case_4_completed} / {checking_finished_players})*100 < 66.6:
					make gui slot 12 with scaffolding named "&6Scaffolding | %{bingo_case_4_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_4}%&f 工"
				else if ({bingo_case_4_completed} / {checking_finished_players})*100 < 100:
					make gui slot 12 with scaffolding named "&cScaffolding | %{bingo_case_4_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_4}%&f 工"
				else:
					make gui slot 12 with scaffolding named "&4Scaffolding | All collected" with lore "&4No more coins are being awarded"
				if ({bingo_case_5_completed} / {checking_finished_players})*100 = 0:
					make gui slot 13 with pumpkin pie named "&2Pumpkin Pie | %{bingo_case_5_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_5}%&f 工"
				else if ({bingo_case_5_completed} / {checking_finished_players})*100 < 33.3:
					make gui slot 13 with pumpkin pie named "&aPumpkin Pie | %{bingo_case_5_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_5}%&f 工"
				else if ({bingo_case_5_completed} / {checking_finished_players})*100 < 66.6:
					make gui slot 13 with pumpkin pie named "&6Pumpkin Pie | %{bingo_case_5_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_5}%&f 工"
				else if ({bingo_case_5_completed} / {checking_finished_players})*100 < 100:
					make gui slot 13 with pumpkin pie named "&cPumpkin Pie | %{bingo_case_5_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_5}%&f 工"
				else:
					make gui slot 13 with pumpkin pie named "&4Pumpkin Pie | All collected" with lore "&4No more coins are being awarded"
				if ({bingo_case_6_completed} / {checking_finished_players})*100 = 0:
					make gui slot 14 with muddy mangrove roots named "&2Muddy Mangrove Roots | %{bingo_case_6_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_6}%&f 工"
				else if ({bingo_case_6_completed} / {checking_finished_players})*100 < 33.3:
					make gui slot 14 with muddy mangrove roots named "&aMuddy Mangrove Roots | %{bingo_case_6_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_6}%&f 工"
				else if ({bingo_case_6_completed} / {checking_finished_players})*100 < 66.6:
					make gui slot 14 with muddy mangrove roots named "&6Muddy Mangrove Roots | %{bingo_case_6_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_6}%&f 工"
				else if ({bingo_case_6_completed} / {checking_finished_players})*100 < 100:
					make gui slot 14 with muddy mangrove roots named "&cMuddy Mangrove Roots | %{bingo_case_6_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_6}%&f 工"
				else:
					make gui slot 14 with muddy mangrove roots named "&4Muddy Mangrove Roots | All collected" with lore "&4No more coins are being awarded"
				if ({bingo_case_7_completed} / {checking_finished_players})*100 = 0:
					make gui slot 21 with light gray glazed terracotta named "&2Light Gray Glazed Terracotta | %{bingo_case_7_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_7}%&f 工"
				else if ({bingo_case_7_completed} / {checking_finished_players})*100 < 33.3:
					make gui slot 21 with light gray glazed terracotta named "&aLight Gray Glazed Terracotta | %{bingo_case_7_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_7}%&f 工"
				else if ({bingo_case_7_completed} / {checking_finished_players})*100 < 66.6:
					make gui slot 21 with light gray glazed terracotta named "&6Light Gray Glazed Terracotta | %{bingo_case_7_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_7}%&f 工"
				else if ({bingo_case_7_completed} / {checking_finished_players})*100 < 100:
					make gui slot 21 with light gray glazed terracotta named "&cLight Gray Glazed Terracotta | %{bingo_case_7_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_7}%&f 工"
				else:
					make gui slot 21 with light gray glazed terracotta named "&4Light Gray Glazed Terracotta | All collected" with lore "&4No more coins are being awarded"
				if ({bingo_case_8_completed} / {checking_finished_players})*100 = 0:
					make gui slot 22 with dead brain coral fan named "&2Dead Brain Coral Fan | %{bingo_case_8_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_8}%&f 工"
				else if ({bingo_case_8_completed} / {checking_finished_players})*100 < 33.3:
					make gui slot 22 with dead brain coral fan named "&aDead Brain Coral Fan | %{bingo_case_8_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_8}%&f 工"
				else if ({bingo_case_8_completed} / {checking_finished_players})*100 < 66.6:
					make gui slot 22 with dead brain coral fan named "&6Dead Brain Coral Fan | %{bingo_case_8_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_8}%&f 工"
				else if ({bingo_case_8_completed} / {checking_finished_players})*100 < 100:
					make gui slot 22 with dead brain coral fan named "&cDead Brain Coral Fan | %{bingo_case_8_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_8}%&f 工"
				else:
					make gui slot 22 with dead brain coral fan named "&4Dead Brain Coral Fan | All collected" with lore "&4No more coins are being awarded"
				if ({bingo_case_9_completed} / {checking_finished_players})*100 = 0:
					make gui slot 23 with sponge named "&2Sponge | %{bingo_case_9_completed}% collected" with lore "&2Next coin reward : &e+%{pts_lvl_9}%&f 工"
				else if ({bingo_case_9_completed} / {checking_finished_players})*100 < 33.3:
					make gui slot 23 with sponge named "&aSponge | %{bingo_case_9_completed}% collected" with lore "&aNext coin reward : &e+%{pts_lvl_9}%&f 工"
				else if ({bingo_case_9_completed} / {checking_finished_players})*100 < 66.6:
					make gui slot 23 with sponge named "&6Sponge | %{bingo_case_9_completed}% collected" with lore "&6Next coin reward : &e+%{pts_lvl_9}%&f 工"
				else if ({bingo_case_9_completed} / {checking_finished_players})*100 < 100:
					make gui slot 23 with sponge named "&cSponge | %{bingo_case_9_completed}% collected" with lore "&cNext coin reward : &e+%{pts_lvl_9}%&f 工"
				else:
					make gui slot 23 with sponge named "&4Sponge | All collected" with lore "&4No more coins are being awarded"
			open the last gui for the player

command /courses:
	description: lance race
	permission: *
	permission message: &cThis command does not exist
	trigger:
		set {jeu_condi} to 5
		set {jeu_logo} to "" #Multilap Logo (\uE005)
		set {finished_players} to 0
		loop all players:
			set {race_checkpoint.%loop-player's uuid%} to 0
			set {race_lap.%loop-player's uuid%} to 1
			if loop-player has permission "group.spectators":
				setToSpec(loop-player)
				set {finished.%loop-player's uuid%} to true
			else:
				set {finished.%loop-player's uuid%} to false
				set {_item} to carrot on a stick
				apply custom model data to {_item}:
					strings: "lap_1_text"
				set the name of {_item} to "&r&aYou're on Lap 1"
				set slot 40 of loop-player to {_item}
				set {race_total_time.%loop-player's uuid%} to 0
				set {race_lap_time.%loop-player's uuid%} to 0
			set {race_boat.%loop-player's uuid%} to false
		set {race_timer_status} to false
		set {race_lap_1_finished} to false
		set {race_lap_2_finished} to false
		set {race_lap_3_finished} to false
		set {race_lap} to 1
		set {pts_lvl_1} to 40*{checking_finished_players}
		set {pts_lvl_1} to round({pts_lvl_1}*{multiplier})
		set {remove_pts_lvl_1} to round(40*{multiplier})
		set {pts_lvl_2} to 60*{checking_finished_players}
		set {pts_lvl_2} to round({pts_lvl_2}*{multiplier})
		set {remove_pts_lvl_2} to round(60*{multiplier})
		set {pts_lvl_3} to 80*{checking_finished_players}
		set {pts_lvl_3} to round({pts_lvl_3}*{multiplier})
		set {remove_pts_lvl_3} to round(80*{multiplier})
		command("execute in minecraft:races_lap_3 run tp @a 0.5 131 3.5 180 0")
		wait 2 seconds
		command("gamemode adventure @a")

command /bowpvp:
	description: lauch bow pvp
	permission: *
	permission message: &cThis command does not exist
	trigger:
		set {jeu_condi} to 8
		set {jeu_logo} to "" #Bow PVP Logo (\uE008)
		set {finished_players} to {checking_finished_players}
		loop all players:
			set {invicibility.%loop-player's uuid%} to false
			teleport loop-player to location(0.5, 169, 0.5, "Bow_PVP", -180, 90)
			set the maximum health of loop-player to 5
			set {gamemode.%loop-player's uuid%} to 2
			if loop-player has permission "group.spectators":
				setToSpec(loop-player)
				set {alive.%loop-player's uuid%} to false
			else:
				set {max_health.%loop-player's uuid%} to 5
				set {alive.%loop-player's uuid%} to true
				set {finished.%loop-player's uuid%} to false
		wait 2 seconds
		command("gamemode adventure @a")
		command("effect clear @a")
		set {pts_lvl_1} to round(40*{multiplier}) #kill bow & more than 1 heart
		set {pts_lvl_2} to round(30*{multiplier}) #kill sword & more than 1 heart
		set {pts_lvl_3} to round(60*{multiplier}) #kill bow & elemination
		set {pts_lvl_4} to round(45*{multiplier}) #kill sword & elemination
		set {pts_lvl_5} to round(5*{multiplier}) #pitty points more than 1 heart
		set {pts_lvl_6} to round(10*{multiplier}) #pitty points elemination

command /bm:
	description: starts Build Masters
	permission: *
	permission message: &cThis command does not exist
	trigger:
		set {jeu_condi} to 9
		set {jeu_logo} to "" #Build Masters Logo (\uE006)
		set {finished_players} to 0
		set {damage} to 2
		command("execute in build_masters run tp @a 0.5 128 0.5 -90 0")
		command("bossbar set minecraft:mall visible false")
		wait 5 ticks
		set {_pos.player} to 0
		reveal hidden players of all players
		clear all players's inventory
		loop all players:
			command("execute run bossbar set minecraft:mall players %loop-player%")
			set loop-player's gamemode to adventure
			disable fly for loop-player
			if loop-player has permission "group.spectators":
				setToSpec(loop-player)
				set {build.location.%loop-player's uuid%} to -1
				set {build.%loop-player's uuid%} to -1
				set {builds.%loop-player's uuid%} to "Spec"
				set {finished.%loop-player's uuid%} to true
			else:
				reveal player for all players
				disable fly for loop-player
				set {timer_minute.%loop-player's uuid%} to 9
				set {timer_second.%loop-player's uuid%} to 60
				set {build.%loop-player's uuid%} to 1
				set {builds.%loop-player's uuid%} to 0
				set {finished.%loop-player's uuid%} to false
				set {build.location.%loop-player's uuid%} to {_pos.player}
				command("execute as @e[type=minecraft:text_display,tag=bm%{_pos.player} + 1%] run data modify entity @s text set value '{""text"":""Plot : %{color.%loop-player's uuid%}%%loop-player%""}'")
				send "[&9Build Masters&r] Player %loop-player% has been set to plot %{_pos.player}%" to console
				loop all players:
					if loop-player-2 has permission "group.spectators":
						send "[&9Build Masters&r] Player %loop-player-1% has been set to plot %{_pos.player}%" to loop-player-2
				add 1 to {_pos.player}
		set {builds_total} to 0
		set {pts_lvl_1} to 5*{checking_finished_players}#build 1
		set {pts_lvl_1} to round({pts_lvl_1}*{multiplier})#build 1
		set {pts_lvl_2} to 15*{checking_finished_players}#build 2
		set {pts_lvl_2} to round({pts_lvl_2}*{multiplier})#build 2
		set {pts_lvl_3} to 25*{checking_finished_players}#build 3
		set {pts_lvl_3} to round({pts_lvl_3}*{multiplier})#build 3
		set {pts_lvl_4} to 30*{checking_finished_players}#build 4
		set {pts_lvl_4} to round({pts_lvl_4}*{multiplier})#build 4
		set {pts_lvl_5} to 40*{checking_finished_players}#build 5
		set {pts_lvl_5} to round({pts_lvl_5}*{multiplier})#build 5
		set {pts_lvl_6} to 55*{checking_finished_players}#build 6
		set {pts_lvl_6} to round({pts_lvl_6}*{multiplier})#build 6
		set {pts_lvl_7} to 70*{checking_finished_players}#build 7
		set {pts_lvl_7} to round({pts_lvl_7}*{multiplier})#build 7
		set {pts_lvl_8} to 80*{checking_finished_players}#build 8
		set {pts_lvl_8} to round({pts_lvl_8}*{multiplier})#build 8
		set {pts_lvl_9} to 95*{checking_finished_players}#build 9
		set {pts_lvl_9} to round({pts_lvl_9}*{multiplier})#build 9
		set {pts_lvl_10} to 110*{checking_finished_players}#build 10
		set {pts_lvl_10} to round({pts_lvl_10}*{multiplier})#build 10
		command("execute in minecraft:build_masters run setblock 1 129 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 131 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 133 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 135 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 137 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 139 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 141 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 143 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 145 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 147 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 149 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 151 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 153 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 155 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 157 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 159 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 161 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 163 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 165 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 167 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 169 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 171 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 173 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 175 10030 white_concrete")
		command("execute in minecraft:build_masters run setblock 1 177 10030 white_concrete")

command /points <offline player> [<int>] [<text>]:
	description: add or remove points to whatever i want
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-2 is set:
			add arg-2 to {points.%arg-1's uuid%}
			if arg-3 is not set:
				if arg-2 > -1:
					send "<##D9D8F1>+&l%checkPoints(arg-2)% &r工 <##D9D8F1>(Given by %executor%)<##D9D8F1>" to arg-1
					send "<##D9D8F1>+&l%checkPoints(arg-2)% &r工 <##D9D8F1>(Given from %arg-1%<##D9D8F1>)" to executor
				else:
					send "<##D9D8F1>&l%checkPoints(arg-2)% &r工 <##D9D8F1>(Removed by %executor%<##D9D8F1>)" to arg-1
					send "<##D9D8F1>&l%checkPoints(arg-2)% &r工 <##D9D8F1>(Removed from %arg-1%<##D9D8F1>)" to executor
			else:
				if arg-2 > -1:
					send "<##D9D8F1>+&l%checkPoints(arg-2)% &r工 <##D9D8F1>(%arg-3%<##D9D8F1>)" to arg-1
					send "<##D9D8F1>+&l%checkPoints(arg-2)% &r工 <##D9D8F1>(Given due to ""%arg-3%""<##D9D8F1>)" to executor
				else:
					send "<##D9D8F1>&l%checkPoints(arg-2)% &r工 <##D9D8F1>(%arg-3%)" to arg-1
					send "<##D9D8F1>&l%checkPoints(arg-2)% &r工 <##D9D8F1>(Removed due to ""%arg-3%""<##D9D8F1>)" to executor
		else:
			send "<##D9D8F1>Player %arg-1% has &l%checkPoints({points.%arg-1's uuid%})%&r 工" to executor

on tab complete of "/points":
	if tab arg-1 is set:
		clear {_nbs::*}
		loop 1000 times:
			add loop-value to {_nbs::*}
		set tab completions for position 2 to {_nbs::*}
		set tab completions for position 3 to "Type a reason here"

function gamepoints(target: player, points: int, reason: string):
	add {_points} to {points_game.%{_target}'s uuid%}
	if {_points} > -1:
		send "<##D9D8F1>+&l%checkPoints({_points})% &r工 <##D9D8F1>(%{_reason}%<##D9D8F1>)" to {_target}
		send "<##D9D8F1>+&l%checkPoints({_points})% &r工 <##D9D8F1>(%{_reason}%<##D9D8F1>)" to console
	else:
		send "<##D9D8F1>&l%checkPoints({_points})% &r工 <##D9D8F1>(%{_reason}%<##D9D8F1>)" to {_target}
		send "<##D9D8F1>&l%checkPoints({_points})% &r工 <##D9D8F1>(%{_reason}%<##D9D8F1>)" to console

command /gamepoints <offline player> [<int>] [<text>]:
	description: add or remove game points to whatever i want
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-2 is set:
			gamepoints(arg-1, arg-2, arg-3)
		else:
			send "<##D9D8F1>Player %arg-1% has &l%checkPoints({points_game.%arg-1's uuid%})%&r<##D9D8F1> game &r工" to executor

on tab complete of "/gamepoints":
	if tab arg-1 is set:
		clear {_nbs::*}
		loop 1000 times:
			add loop-value to {_nbs::*}
		set tab completions for position 2 to {_nbs::*}
		set tab completions for position 3 to "Type a reason here"

command /totalpoints <offline player> [<int>] [<text>]:
	description: add or remove total points to whatever i want
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-2 is set:
			add arg-2 to {total_points.%arg-1's uuid%}
			if arg-3 is not set:
				if arg-2 > -1:
					send "<##D9D8F1>+&l%checkPoints(arg-2)% &r工 <##D9D8F1>(Given by %executor%<##D9D8F1>)" to arg-1
					send "<##D9D8F1>+&l%checkPoints(arg-2)% &r工 <##D9D8F1>(Given from %arg-1%<##D9D8F1>)" to executor
				else:
					send "<##D9D8F1>&l%checkPoints(arg-2)% &r工 <##D9D8F1>(Removed by %executor%<##D9D8F1>)" to arg-1
					send "<##D9D8F1>&l%checkPoints(arg-2)% &r工 <##D9D8F1>(Removed from %arg-1%<##D9D8F1>)" to executor
			else:
				if arg-2 > -1:
					send "<##D9D8F1>+&l%checkPoints(arg-2)% &r工 <##D9D8F1>(%arg-3%<##D9D8F1>)" to arg-1
					send "<##D9D8F1>+&l%checkPoints(arg-2)% &r工 <##D9D8F1>(Given due to ""%arg-3%""<##D9D8F1>)" to executor
				else:
					send "<##D9D8F1>&l%checkPoints(arg-2)% &r工 <##D9D8F1>(%arg-3%<##D9D8F1>)" to arg-1
					send "<##D9D8F1>&l%checkPoints(arg-2)% &r工 <##D9D8F1>(Removed due to ""%arg-3%""<##D9D8F1>)" to executor
		else:
			send "<##D9D8F1>Player %arg-1% has &l%checkPoints({total_points.%arg-1's uuid%})%&r<##D9D8F1> total &r工" to executor

on tab complete of "/totalpoints":
	if tab arg-1 is set:
		clear {_nbs::*}
		loop 1000 times:
			add loop-value to {_nbs::*}
		set tab completions for position 2 to {_nbs::*}
		set tab completions for position 3 to "Type a reason here"

command /tele:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		set {jeu_condi} to 8
		respawnBowPVP(player)

command /damage [<int>]:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-1 is set:
			set {damage} to arg-1
		else:
			send "Damage : %{damage}%"

on tab complete of "/damage":
	set tab completions for position 1 to 1, 2 and 3

command /health <int> <offline player>:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		set the maximum health of player to arg-1
		set {health.%player's uuid%} to arg-2
		heal player

on tab complete of "/health":
	if tab arg-1 is set:
		clear {_nbs::*}
		loop 20 times:
			add loop-value+1 to {_nbs::*}
		set tab completions for position 2 to {_nbs::*}

command /jeucondi [<int>]:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-1 is set:
			set {jeu_condi} to arg-1
		else:
			send "The current game condition is : %{jeu_condi}%"

on tab complete of "/jeucondi":
	clear {_nbs::*}
	loop 14 times:
		add loop-value to {_nbs::*}
	set tab completions for position 1 to {_nbs::*}

command /jeu [<int>]:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-1 is set:
			set {jeu} to arg-1
		else:
			send "The current game number is : %{jeu}%"

on tab complete of "/jeu":
	clear {_nbs::*}
	loop 7 times:
		add loop-value to {_nbs::*}
	set tab completions for position 1 to {_nbs::*}

command /gm <int>:
	permission: group.spectators
	permission message: &cThis command does not exist
	trigger:
		set {gamemode.%player's uuid%} to arg-1
		if arg-1 is 1:
			set player's gamemode to creative
			send "Your gamemode has been set to Creative"
		if arg-1 is 2:
			set player's gamemode to adventure
			send "Your gamemode has been set to Adventure"
		if arg-1 is 3:
			set player's gamemode to spectator
			send "Your gamemode has been set to Spectator"
		if arg-1 is 0:
			set player's gamemode to survival
			send "Your gamemode has been set to Survival"

on tab complete of "/gm":
	clear {_nbs::*}
	loop 4 times:
		add loop-value to {_nbs::*}
	set tab completions for position 1 to {_nbs::*}

command /updateclassement:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		updateClassement()

command /updateparkour:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		updateParkour()

#command /reloadscoreboard:
#	permission:  *
#	permission message: &cThis command does not exist
#	trigger:
#		reloadScoreboard()

command /readycheck:
	description: do a ready check
	permission: *
	permission message: &cThis command does not exist
	trigger:
		set {check_players} to 0
		set {replied} to 0
		make player execute command "mute"
		wait 3 seconds
		loop all players:
			set {ready_check.%loop-player's uuid%} to false
			set {ready.%loop-player's uuid%} to false
			if loop-player has permission "group.spectators":
				send "[&4Admin&r] Ready check started by %executor%, ends in 30 seconds" to loop-player
				set {ready.%loop-player's uuid%} to true
			else:
				add 1 to {check_players}
				send "%nl%%nl%<#1D7874>--------------------------------%nl%%nl%%nl%" to loop-player
				send "<#BCD71D>Are you ready to start playing ?%nl%" to loop-player
				send "<run command:/ready>&a&lI am ready to play<reset><#E2F093> or <run command:/notready>&c&lI am not ready to play<reset>&r" to loop-player
				send "%nl%%nl%%nl%<#1D7874>--------------------------------%nl%%nl%" to loop-player
		set {timer-s} to 31
		while {replied} != {online_players}:
			wait 1 tick
			remove 1 from {timer-s}
			if {timer-s} < 1:
				loop all players:
					if {ready.%loop-player's uuid%} is true:
						if loop-player doesn't have permission "group.spectators":
							remove 1 from {check_players}
			if {timer-s} > 21:
				send action bar "&e&lTime left : &a&l%{timer-s}%&e&ls" to all players
			if {timer-s} = 20 or 10 or 0:
				clear {ready::*}
				loop all players:
					if {ready.%loop-player's uuid%} = false:
						add "%{color.%loop-player's uuid%}%%loop-player%&r" to {ready::*}
				set {ready_message} to ""
				if the size of {ready::*} = 1:
					if {timer-s} = 20:
						set {ready_message} to "%{ready::1}% hasn't replied."
					if {timer-s} = 10:
						set {ready_message} to "%{ready::1}% still hasn't replied."
					if {timer-s} = 0:
						set {ready_message} to "%{ready::1}% failed to reply."
				else:
					loop {ready::*}:
						if loop-index = "1":
							set {ready_message} to loop-value
						if loop-index = "%size of {ready::*}%":
							if {timer-s} = 20:
								set {ready_message} to "%{ready_message}% and %loop-value% haven't replied."
							if {timer-s} = 10:
								set {ready_message} to "%{ready_message}% and %loop-value% still haven't replied."
							if {timer-s} = 0:
								set {ready_message} to "%{ready_message}% and %loop-value% failed to reply."
						else:
							if {ready_message} != loop-value:
								set {ready_message} to "%{ready_message}%, %loop-value%"
				broadcast "[<##1D7874>&lReady Check&r] %{ready_message}%"
				if {timer-s} = 0:
					exit loop
			else if {timer-s} > 11:
				send action bar "&e&lTime left : &6&l%{timer-s}%&e&ls" to all players
			else if {timer-s} > 0:
				send action bar "&e&lTime left : &c&l%{timer-s}%&e&ls" to all players
			wait 19 ticks
		if {check_players} is 0:
			send "[&4Admin&r] Everyone is ready, start whenever you want !" to executor
		else:
			clear {not_ready::*}
			loop all players:
				if {ready_check.%loop-player's uuid%} is false:
					set {ready_check.%loop-player's uuid%} to true
			create a gui with virtual chest inventory with 3 rows named "Players who aren't ready":
				wait 1 tick
				set {pos} to 0
				loop all players:
					if {ready.%loop-player's uuid%} is false:
						set {head} to "%loop-player%" parsed as an offline player
						add "%loop-player%" to {not_ready::*}
						make gui slot {pos} with skull of {head} named "&r&c&l%loop-player%&f isn't ready":
							make player say "%{not_ready::%index of clicked slot+1%}%, what's up?"
						add 1 to {pos}
			open the last gui for the player
			send "[&4Admin&r] %{check_players}% players are not ready, ask them why they aren't"
		make player execute command "mute"

command /ready:
	description: ready you automatically
	trigger:
		if {ready_check.%player's uuid%} is false:
			set {ready_check.%player's uuid%} to true
			set {ready.%player's uuid%} to true
			add 1 to {ready_player}
			add 1 to {replied}
			loop all players:
				if loop-player has permission "theevent580.staff":
					send "[<##1D7874>&lReady Check&r] &a&l%player%&r is ready to start." to loop-player

command /notready:
	description: unready you automatically
	trigger:
		if {ready_check.%player's uuid%} is false:
			set {ready_check.%player's uuid%} to true
			set {ready.%player's uuid%} to false
			add 1 to {replied}
			loop all players:
				if loop-player has permission "theevent580.staff":
					send "[<##1D7874>&lReady Check&r] &c&l%player%&r isn't ready to start." to loop-player

command /serverversion:
	description: give the server version
	permission: *
	permission message: &cThis command does not exist
	trigger:
		send "MC server version : Paper 1.20.1 (Build 193)"

command /qmskin:
	description: send the Question Mark skin to the executor
	permission: *
	permission message: &cThis command does not exist
	trigger:
		send "<link:https://s.namemc.com/i/fc14461a38710880.png>The skin<reset>"

command /world:
	permission: *
	permission message: &cThis command does not exist
	description: send player's world
	trigger:
		send player's world to player

command /ping [<player>]:
	description: send arg-1's ping (if precised) to executor
	trigger:
		if arg-1 is set:
			if arg-1's ping < 50:
				send "[<##1D7874>&lPing&r] %arg-1%'s ping is &a&l%arg-1's ping% &rms" to executor
			else if arg-1's ping < 100:
				send "[<##1D7874>&lPing&r] %arg-1%'s ping is &e&l%arg-1's ping% &rms" to executor
			else if arg-1's ping < 150:
				send "[<##1D7874>&lPing&r] %arg-1%'s ping is &6&l%arg-1's ping% &rms" to executor
			else if arg-1's ping < 200:
				send "[<##1D7874>&lPing&r] %arg-1%'s ping is &c&l%arg-1's ping% &rms" to executor
			else:
				send "[<##1D7874>&lPing&r] %arg-1%'s ping is &4&l%arg-1's ping% &rms" to executor
		else:
			if executor's ping < 50:
				send "[<##1D7874>&lPing&r] Your ping is &a&l%executor's ping% &rms" to executor
			else if executor's ping < 100:
				send "[<##1D7874>&lPing&r] Your ping is &e&l%executor's ping% &rms" to executor
			else if executor's ping < 150:
				send "[<##1D7874>&lPing&r] Your ping is &6&l%executor's ping% &rms" to executor
			else if executor's ping < 200:
				send "[<##1D7874>&lPing&r] Your ping is &c&l%executor's ping% &rms" to executor
			else:
				send "[<##1D7874>&lPing&r] Your ping is &4&l%executor's ping% &rms" to executor

command /msg <player> <text>:
	aliases: tell
	trigger:
		if arg-1 is player:
			send "[<##155966>&lPrivate Messages&r] Talking to yourself is disabled on this server."
		else:
			send "[<##155966>&lPrivate Messages&r] From %player% : %arg-2%" to arg-1
			send "[<##155966>&lPrivate Messages&r] To %arg-1% : %arg-2%" to player

command /staff <text> [<player>]:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-1 is "remove":
			remove arg-2 from {staff::*}
		if arg-1 is "add":
			add arg-2 to {staff::*}
		if arg-1 is "see":
			send "[&4Admin&r] Online staff :"
			loop {staff::*}:
				send "[&4Admin&r] %loop-value%"

command /tpspec:
	trigger:
		set {_user} to player
		if {timer} or {timer_save} = 5 or 6:
			if {finished.%player's uuid%} is true:
				create a gui with virtual chest inventory with 6 rows named "&f露 &8Spectator menu":
					wait 1 tick
					make gui slot 0 with red stained glass pane named "&rラ &cRed"
					make gui slot 9 with orange stained glass pane named "&rャ &6Orange"
					make gui slot 18 with yellow stained glass pane named "&rギ &eYellow"
					make gui slot 27 with lime stained glass pane named "&r画 &aLime"
					make gui slot 36 with light blue stained glass pane named "&r動 &bLight Blue"
					make gui slot 45 with blue stained glass pane named "&r像 &9Blue"
					set {_slot.red} to 1
					set {_slot.orange} to 10
					set {_slot.yellow} to 19
					set {_slot.lime} to 28
					set {_slot.light_blue} to 37
					set {_slot.blue} to 46
					loop all players:
						if {finished.%loop-player's uuid%} is false:
							set {_good_color} to false
							set {_head} to "%loop-value%" parsed as an offline player
							if loop-player has permission "group.rouge":
								set {_good_color} to true
								set {_slot} to {_slot.red}
								add 1 to {_slot.red}
							if loop-player has permission "group.orange":
								set {_good_color} to true
								set {_slot} to {_slot.orange}
								add 1 to {_slot.orange}
							if loop-player has permission "group.jaune":
								set {_good_color} to true
								set {_slot} to {_slot.yellow}
								add 1 to {_slot.yellow}
							if loop-player has permission "group.vert":
								set {_good_color} to true
								set {_slot} to {_slot.lime}
								add 1 to {_slot.lime}
							if loop-player has permission "group.bleu_clair":
								set {_good_color} to true
								set {_slot} to {_slot.light_blue}
								add 1 to {_slot.light_blue}
							if loop-player has permission "group.bleu":
								set {_good_color} to true
								set {_slot} to {_slot.blue}
								add 1 to {_slot.blue}
						if {_good_color} = true:
							make gui slot {_slot} with skull of {_head} named "&fTeleport to %{color.%loop-player's uuid%}%%{_head}%":
								teleport {_user} to {_head}
								close {_user}'s inventory
					set {_slot} to 8
					set {_head} to a player head
					set {_headnbt} to nbt compound of {_head}
					add nbt of "{""minecraft:custom_name"":'{""text"":""&r&fNext page""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZDM0ZWYwNjM4NTM3MjIyYjIwZjQ4MDY5NGRhZGMwZjg1ZmJlMDc1OWQ1ODFhYTdmY2RmMmU0MzEzOTM3NzE1OCJ9fX0=""}]}}" to {_headnbt}
					loop 6 times:
						make gui slot {_slot} with {_head}:
							close {_user}'s inventory
							make player execute command "tpspec2"
						add 9 to {_slot}
				open the last gui for the player
			else:
				if player has permission "group.spectators":
					create a gui with virtual chest inventory with 6 rows named "&f露 &8Spectator menu":
						wait 1 tick
						make gui slot 0 with red stained glass pane named "&rラ &cRed"
						make gui slot 9 with orange stained glass pane named "&rャ &6Orange"
						make gui slot 18 with yellow stained glass pane named "&rギ &eYellow"
						make gui slot 27 with lime stained glass pane named "&r画 &aLime"
						make gui slot 36 with light blue stained glass pane named "&r動 &bLight Blue"
						make gui slot 45 with blue stained glass pane named "&r像 &9Blue"
						set {_slot.red} to 1
						set {_slot.orange} to 10
						set {_slot.yellow} to 19
						set {_slot.lime} to 28
						set {_slot.light_blue} to 37
						set {_slot.blue} to 46
						loop all players:
							if {finished.%loop-player's uuid%} is false:
								set {_good_color} to false
								set {_head} to "%loop-value%" parsed as an offline player
								if loop-player has permission "group.rouge":
									set {_good_color} to true
									set {_slot} to {_slot.red}
									add 1 to {_slot.red}
								if loop-player has permission "group.orange":
									set {_good_color} to true
									set {_slot} to {_slot.orange}
									add 1 to {_slot.orange}
								if loop-player has permission "group.jaune":
									set {_good_color} to true
									set {_slot} to {_slot.yellow}
									add 1 to {_slot.yellow}
								if loop-player has permission "group.vert":
									set {_good_color} to true
									set {_slot} to {_slot.lime}
									add 1 to {_slot.lime}
								if loop-player has permission "group.bleu_clair":
									set {_good_color} to true
									set {_slot} to {_slot.light_blue}
									add 1 to {_slot.light_blue}
								if loop-player has permission "group.bleu":
									set {_good_color} to true
									set {_slot} to {_slot.blue}
									add 1 to {_slot.blue}
							if {_good_color} = true:
								make gui slot {_slot} with skull of {_head} named "&fTeleport to %{color.%loop-player's uuid%}%%{_head}%":
									teleport {_user} to {_head}
									close {_user}'s inventory
						set {_slot} to 8
						set {_head} to a player head
						set {_headnbt} to nbt compound of {_head}
						add nbt of "{""minecraft:custom_name"":'{""text"":""&r&fNext page""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZDM0ZWYwNjM4NTM3MjIyYjIwZjQ4MDY5NGRhZGMwZjg1ZmJlMDc1OWQ1ODFhYTdmY2RmMmU0MzEzOTM3NzE1OCJ9fX0=""}]}}" to {_headnbt}
						loop 6 times:
							make gui slot {_slot} with {_head}:
								close {_user}'s inventory
								make player execute command "tpspec2"
							add 9 to {_slot}
					open the last gui for the player
		else:
			send "[&4Admin&r] You currently don't have access to the teleport menu"
command /tpspec2:
	trigger:
		set {_user} to player
		if {timer} or {timer_save} = 5 or 6:
			if {finished.%player's uuid%} is true:
				create a gui with virtual chest inventory with 2 rows named "&f露 &8Spectator menu":
					wait 1 tick
					make gui slot 0 with purple stained glass pane named "&rの &5Purple"
					make gui slot 9 with pink stained glass pane named "&r目 &dPink"
					set {_slot.purple} to 1
					set {_slot.pink} to 10
					loop all players:
						if {finished.%loop-player's uuid%} is false:
							set {_good_color} to false
							set {_head} to "%loop-value%" parsed as an offline player
							if loop-player has permission "group.violet":
								set {_good_color} to true
								set {_slot} to {_slot.purple}
								add 1 to {_slot.purple}
							if loop-player has permission "group.rose":
								set {_good_color} to true
								set {_slot} to {_slot.pink}
								add 1 to {_slot.pink}
						if {_good_color} is true:
							make gui slot {_slot} with skull of {_head} named "&fTeleport to %{color.%loop-player's uuid%}%%{_head}%":
								teleport {_user} to {_head}
								close {_user}'s inventory
					set {_slot} to 8
					set {_head} to a player head
					set {_headnbt} to nbt compound of {_head}
					add nbt of "{""minecraft:custom_name"":'{""text"":""&r&fPrevious page""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZjdhYWNhZDE5M2UyMjI2OTcxZWQ5NTMwMmRiYTQzMzQzOGJlNDY0NGZiYWI1ZWJmODE4MDU0MDYxNjY3ZmJlMiJ9fX0=""}]}}" to {_headnbt}
					loop 2 times:
						make gui slot {_slot} with {_head}:
							close {_user}'s inventory
							make player execute command "tpspec"
						add 9 to {_slot}
				open the last gui for the player
			else:
				if player has permission "group.spectators":
					create a gui with virtual chest inventory with 2 rows named "&f露 &8Spectator menu":
						wait 1 tick
						make gui slot 0 with purple stained glass pane named "&rの &5Purple"
						make gui slot 9 with pink stained glass pane named "&r目 &dPink"
						set {_slot.purple} to 1
						set {_slot.pink} to 10
						loop all players:
							if {finished.%loop-player's uuid%} is false:
								set {_good_color} to false
								set {_head} to "%loop-value%" parsed as an offline player
								if loop-player has permission "group.violet":
									set {_good_color} to true
									set {_slot} to {_slot.purple}
									add 1 to {_slot.purple}
								if loop-player has permission "group.rose":
									set {_good_color} to true
									set {_slot} to {_slot.pink}
									add 1 to {_slot.pink}
							if {_good_color} is true:
								make gui slot {_slot} with skull of {_head} named "&fTeleport to %{color.%loop-player's uuid%}%%{_head}%":
									teleport {_user} to {_head}
									close {_user}'s inventory
						set {_slot} to 8
						set {_head} to a player head
						set {_headnbt} to nbt compound of {_head}
						add nbt of "{""minecraft:custom_name"":'{""text"":""&r&fPrevious page""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZjdhYWNhZDE5M2UyMjI2OTcxZWQ5NTMwMmRiYTQzMzQzOGJlNDY0NGZiYWI1ZWJmODE4MDU0MDYxNjY3ZmJlMiJ9fX0=""}]}}" to {_headnbt}
						loop 2 times:
							make gui slot {_slot} with {_head}:
								close {_user}'s inventory
								make player execute command "tpspec"
							add 9 to {_slot}
				open the last gui for the player
		else:
			send "[&4Admin&r] You currently don't have access to the teleport menu"

command /test:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		giveRandomItems(sender)

command /emotes [<text>]:
	description: opens a gui with all the emotes that, when clicked, will send that emote in chat
	trigger:
		if arg-1 is not set:
			set {_skull} to a player head
			set {_skullnbt} to nbt compound of {_skull}
			add nbt of "{""minecraft:custom_name"":'{""text"":""&r&fSkull""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNWRjZjJjMTk4ZjYxZGY1YTZkMGJhOTdkYmY5MGMzMzc5OTU0MDVjMTczOTZjMDE2Yzg1ZjZmM2ZlYTUyYzkwNiJ9fX0=""}]}}" to {_skullnbt}
			set {_heartmenu} to a player head
			set {_heartmenunbt} to nbt compound of {_heartmenu}
			add nbt of "{""minecraft:custom_name"":'{""text"":""&r&cRed Heart""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZWI3NmI0ZWU5ODg1NzIyOTdjYmQ4NzQ2ODNiZWU5NmFlM2M1NWNlOTRjMDA0ZTUxYWRjODJjZWUxNmNkMGIwYyJ9fX0=""}]}}" to {_heartmenunbt}
			open chest inventory with 3 rows named "Emotes menu" to player
			set slot 0 of current inventory of player to {_skull}
			set slot 1 of current inventory of player to {_heartmenu}
			set slot 26 of current inventory of player to barrier named "&r&cClose emote menu"
			set {menu.%player's uuid%} to "main"
		else:
			if arg-1 is "heart":
				set {_heart1} to a player head
				set {_heart1nbt} to nbt compound of {_heart1}
				add nbt of "{""minecraft:custom_name"":'{""text"":""&r&4Dark Red Heart""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZWI3NmI0ZWU5ODg1NzIyOTdjYmQ4NzQ2ODNiZWU5NmFlM2M1NWNlOTRjMDA0ZTUxYWRjODJjZWUxNmNkMGIwYyJ9fX0=""}]}}" to {_heart1nbt}
				set {_heart2} to a player head
				set {_heart2nbt} to nbt compound of {_heart2}
				add nbt of "{""minecraft:custom_name"":'{""text"":""&r&cRed Heart""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZWI3NmI0ZWU5ODg1NzIyOTdjYmQ4NzQ2ODNiZWU5NmFlM2M1NWNlOTRjMDA0ZTUxYWRjODJjZWUxNmNkMGIwYyJ9fX0=""}]}}" to {_heart2nbt}
				set {_heart3} to a player head
				set {_heart3nbt} to nbt compound of {_heart3}
				add nbt of "{""minecraft:custom_name"":'{""text"":""&r&6Orange Heart""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNTZhMjdlZGRmNjBhMDQ4Mzc3OGM4ZTNjNjY1MGY1Mjg4MzQxZjM4YmI5ZTQzMTc5YzY2YmIxZTdiMWQ5ZGQ2YiJ9fX0=""}]}}" to {_heart3nbt}
				set {_heart4} to a player head
				set {_heart4nbt} to nbt compound of {_heart4}
				add nbt of "{""minecraft:custom_name"":'{""text"":""&r&eYellow Heart""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYWVlOWJhYzBhZDRhYmY1OTU1NmE5ODY0ODAwNGU4Mzc0MWQ3NmU0MDk3YjJkZjAzNzIwN2YxYTY5ZDRhZmNmZCJ9fX0=""}]}}" to {_heart4nbt}
				set {_heart5} to a player head
				set {_heart5nbt} to nbt compound of {_heart5}
				add nbt of "{""minecraft:custom_name"":'{""text"":""&r&aLime Heart""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYjQ0MWJhMzA5MTA2MWM2OTliOGVhNDA4NTAxMTAzNzhlOTU0NTQwNDhkMWY1MTA1NmM2YWVjMzk1MDUxM2VhYiJ9fX0=""}]}}" to {_heart5nbt}
				set {_heart6} to a player head
				set {_heart6nbt} to nbt compound of {_heart6}
				add nbt of "{""minecraft:custom_name"":'{""text"":""&r&2Green Heart""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYTZiZmI5M2MxM2U1MmQ1M2RhM2RiYjk3YzhkZWUyYjZlMzY4ZDlkN2RjN2RmNjRlMDdiNDNhMmM2NTJjMGU4MSJ9fX0=""}]}}" to {_heart6nbt}
				set {_heart7} to a player head
				set {_heart7nbt} to nbt compound of {_heart7}
				add nbt of "{""minecraft:custom_name"":'{""text"":""&r&3Cyan Heart""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZGE0OWQ1NTY5M2JiOWJhODI4OWYxMTU2MDcxYTE0OWYzYjliZTI0ZGJiMzY2NjQyMmUzYzEzNTVhOGM5YWVlMyJ9fX0=""}]}}" to {_heart7nbt}
				set {_heart8} to a player head
				set {_heart8nbt} to nbt compound of {_heart8}
				add nbt of "{""minecraft:custom_name"":'{""text"":""&r&bLight Blue Heart""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNDRmN2ZhMTk2ZDhmOWFhY2ZjMDgxYjgxZTNjYWUxYmU0MWNmZGJlZGQzMDkyOGRjOWJjYzhjNTc5MGYyMmFkOSJ9fX0=""}]}}" to {_heart8nbt}
				set {_heart9} to a player head
				set {_heart9nbt} to nbt compound of {_heart9}
				add nbt of "{""minecraft:custom_name"":'{""text"":""&r&9Blue Heart""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZWZmZmRiNGY3NWUxNjc4ZWNmYWE1ZjQyYTMyZjExZTFjYzA4Nzk0NmY0ODU3NDYzYWU2NjQ3Y2MzZTAwNzllMiJ9fX0=""}]}}" to {_heart9nbt}
				set {_heart10} to a player head
				set {_heart10nbt} to nbt compound of {_heart10}
				add nbt of "{""minecraft:custom_name"":'{""text"":""&r&1Dark Blue Heart""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZWZmZmRiNGY3NWUxNjc4ZWNmYWE1ZjQyYTMyZjExZTFjYzA4Nzk0NmY0ODU3NDYzYWU2NjQ3Y2MzZTAwNzllMiJ9fX0=""}]}}" to {_heart10nbt}
				set {_heart11} to a player head
				set {_heart11nbt} to nbt compound of {_heart11}
				add nbt of "{""minecraft:custom_name"":'{""text"":""&r&5Purple Heart""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvOTdiYjRkYTkzZGYyZGU5MmJhNjM5YmEzMzQzN2MxNDkxMWMyOWJlMmVhNTdmYmYzMDViODBlZmZhZWNjNGJmYyJ9fX0=""}]}}" to {_heart11nbt}
				set {_heart12} to a player head
				set {_heart12nbt} to nbt compound of {_heart12}
				add nbt of "{""minecraft:custom_name"":'{""text"":""&r&dPink Heart""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvY2E3MDdlNzQxZmYyMjM0MzgwOTE2YzI2NWY2OThkODIyOThlYzNjMWIzMmI1YjA0ZGFjNDA3NmUxODA0MTlkMiJ9fX0=""}]}}" to {_heart12nbt}
				set {_goback} to a player head
				set {_gobacknbt} to nbt compound of {_goback}
				add nbt of "{""minecraft:custom_name"":'{""text"":""&r&fGo back to the main menu""}',""minecraft:profile"":{properties:[{name:""textures"",value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZjdhYWNhZDE5M2UyMjI2OTcxZWQ5NTMwMmRiYTQzMzQzOGJlNDY0NGZiYWI1ZWJmODE4MDU0MDYxNjY3ZmJlMiJ9fX0=""}]}}" to {_gobacknbt}
				open chest inventory with 3 rows named "Emotes menu" to player
				set slot 0 of current inventory of player to {_heart1}
				set slot 1 of current inventory of player to {_heart2}
				set slot 2 of current inventory of player to {_heart3}
				set slot 3 of current inventory of player to {_heart4}
				set slot 4 of current inventory of player to {_heart5}
				set slot 5 of current inventory of player to {_heart6}
				set slot 6 of current inventory of player to {_heart7}
				set slot 7 of current inventory of player to {_heart8}
				set slot 8 of current inventory of player to {_heart9}
				set slot 9 of current inventory of player to {_heart10}
				set slot 10 of current inventory of player to {_heart11}
				set slot 11 of current inventory of player to {_heart12}
				set slot 25 of current inventory of player to {_goback}
				set slot 26 of current inventory of player to barrier named "&r&cClose emote menu"
				set {menu.%player's uuid%} to "heart"

command /fly [<player>] [<boolean>]:
	permission: group.spectators
	permission message: &cThis command does not exist
	trigger:
		if arg-1 is set:
			if arg-2 is set:
				if arg-2 is true:
					allow fly for arg-1
					force arg-1 to fly
					send "[&4Admin&r] Fly mode enabled for %arg-1%" to player
					if arg-1 is not player:
						send "[&4Admin&r] Fly mode enabled by %executor%" to arg-1
				else:
					disable fly for arg-1
					send "[&4Admin&r] Fly mode disabled for %arg-1%" to player
					if arg-1 is not player:
						send "[&4Admin&r] Fly mode disabled by %executor%" to arg-1
			else:
				if arg-1 can fly:
					disable fly for arg-1
					send "[&4Admin&r] Fly mode disabled for %arg-1%" to player
					if arg-1 is not player:
						send "[&4Admin&r] Fly mode disabled by %executor%" to arg-1
				else:
					allow fly for arg-1
					force arg-1 to fly
					send "[&4Admin&r] Fly mode enabled for %arg-1%" to player
					if arg-1 is not player:
						send "[&4Admin&r] Fly mode enabled by %executor%" to arg-1
		else:
			if executor is player:
				if arg-2 is set:
					if arg-2 is true:
						allow fly for player
						force player to fly
						send "[&4Admin&r] Fly mode enabled for %arg-1%" to players
					else:
						disable fly for player
						send "[&4Admin&r] Fly mode disabled" to player
				else:
					if player can fly:
						disable fly for player
						send "[&4Admin&r] Fly mode disabled" to player
					else:
						allow fly for player
						force player to fly
						send "[&4Admin&r] Fly mode enabled" to player

on tab complete of "/fly":
	if tab arg-1 is set:
		set tab completions for position 2 to "true" and "false"

command /mute [<player>]:
	permission: *
	permission message: &cThis command does not exist
	description: Mutes chat (or player if enter as an arg)
	trigger:
		if arg-1 is not set:
			if {mute.server} is false:
				set {mute.server} to true
				send action bar "[<##1D7874>&lChat&r] &6⚠&rThe chat has been muted !" to all players
			else if {mute.server} is true:
				send action bar "[<##1D7874>&lChat&r] &6⚠&rThe chat has been unmuted !" to all players
				set {mute.server} to false
		else:
			if arg-1 doesn't have permission "group.spectators":
				if {mute.%arg-1's uuid%} is false:
					set {mute.%arg-1's uuid%} to true
					send "[<##1D7874>&lChat&r] &6⚠&rYou have been muted by %player% !%nl%" to arg-1
					send "[<##1D7874>&lChat&r] &6⚠&rYou have muted %arg-1% sucessfully !%nl%" to player
				else if {mute.%arg-1's uuid%} is true:
					set {mute.%arg-1's uuid%} to false
					send "[<##1D7874>&lChat&r] &6⚠&rYou have been unmuted by %player% !%nl%" to arg-1
					send "[<##1D7874>&lChat&r] &6⚠&rYou have unmuted %arg-1% sucessfully !%nl%" to player

command /filter <text> <text>:
	description: add a word / sentence to the anti-swear filter
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-1 is "add":
			add arg-2 to {filter::*}
		else if arg-1 is "remove":
			remove arg-2 from {filter::*}

on tab complete of "/filter":
	set tab completions for position 1 to "add" and "remove"

command /filtersee:
	description: send the anti-swear filter to the player
	permission: *
	trigger:
		send "[&4Admin&r] Here are all of the banned words:"
		loop {filter::*}:
			send "[&4Admin&r] %loop-value%"

command /testmode <text>:
	description: turns on and off the test mode
	permission: *
	trigger:
		if arg-1 is "on":	
			set {jeu_condi_save} to {jeu_condi}
			set {jeu_condi} to -1
		else if arg-1 is "off":
			set {jeu_condi} to {jeu_condi_save}

on tab complete of "/testmode":
	set tab completions for position 1 to "on" and "off"

command /seeplacement:
	permission: *
	permission message: &cThis command does not exist
	description: allows the executor of the command to see the placement
	trigger:
		clear {show}
		clear {finished::*}
		clear {list_points::*}
		clear {list_points_player::*}
		loop all players:
			if loop-player doesn't have permission "group.spectators":
				add {points.%loop-player's uuid%} to {list_points::*}
				set {points_string.%loop-player's uuid%} to "%{points.%loop-player's uuid%}%"
		set {list_points::*} to sorted {list_points::*}
		set {list_points::*} to reversed {list_points::*}

		send "[&4Admin&r] Here are placements of all the players :"
		set {seepts} to 1
		loop {list_points::*}:
			loop all players:
				if loop-player doesn't have permission "group.spectators":
					if {list_points_player::*} doesn't contain loop-player's name:
						add loop-player's name to {list_points_player::*}
						if {list_points::%{seepts}%} = {points.%loop-player's uuid%}:
							send "[&4Admin&r] %{seepts}% : %{color.%loop-player's uuid%}%%loop-player%&r has %{points.%loop-player's uuid%}% 工"
			add 1 to {seepts}

command /on:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		make executor execute command "sk reload on.sk"

command /commands:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		make executor execute command "sk reload commands.sk"

command /every:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		make executor execute command "sk reload every.sk"

command /functions:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		make executor execute command "sk reload functions.sk"

command /ph:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		make executor execute command "sk reload placeholders.sk"

command /scripts:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		make executor execute command "sk reload scripts"

command /all:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		make executor execute command "sk reload all"

command /see <player> [<boolean = false>]:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-2 = false:
			loop all players:
				if loop-player doesn't have permission "group.spectators":
					if {finished.%loop-player's uuid%} is false:
						reveal loop-player for arg-1
			send "[&4Admin&r] You can now see the players who haven't finished yet" to arg-1
		else:
			reveal all players for arg-1
			send "[&4Admin&r] You can now see everyone" to arg-1

command /skip:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		create a gui with virtual chest inventory with 3 rows named "Are you sure to skip the game ?":
			make gui slot 12 with lime wool named "&aYes" with lore "&rI am sure to skip the game !":
				close player's inventory
				loop {staff::*}:
					send "[&4Admin&r] Game is getting skipped by %executor%" to loop-value
				if {jeu} is 6:
					set {timer-m} to 1
					set {timer-s} to 30
					set {timer} to 10
				else:
					set {timer} to 8
					if {jeu} is 3:
						set {timer-m} to 5
						set {timer-s} to 60
					else:			
						set {timer-m} to 1
						set {timer-s} to 60
				set {l6} to {jeu_nom}
				set {jeu_nom} to "&rHub"
				set {finished_players} to 0
				set {courses_boat_timer_status} to false
				set {courses_pied_timer_status} to false
				set {courses_trident_timer_status} to false
				set {damage} to 1
				clear {pos1}
				clear {pos2}
				clear {pos3}
				clear {show}
				clear {finished::*}
				clear {list_points::*}
				set {jeu_condi} to 0
				set {scoreboard.pos} to 0
				loop all players:
					clear loop-player's inventory
					make loop-player execute command "spawn"
					set {gamemode.%loop-player's uuid%} to 2
					remove {points_game.%loop-player's uuid%} from {total_points.%loop-player's uuid%}
					set {points_game.%loop-player's uuid%} to 0
					#Parkour
					set {parkour_checkpoint.%loop-player's uuid%} to "Start"
					#Dropper
					set {dropper_level.%loop-player's uuid%} to 0
					#Find The Button
					set {ftb_fin.%loop-player's uuid%} to 0
					set {ftb_1.%loop-player's uuid%} to false
					set {ftb_2.%loop-player's uuid%} to false
					set {ftb_3.%loop-player's uuid%} to false
					set {ftb_4.%loop-player's uuid%} to false
					set {ftb_5.%loop-player's uuid%} to false
					set {ftb_6.%loop-player's uuid%} to false
					set {ftb_7.%loop-player's uuid%} to false
					set {ftb_8.%loop-player's uuid%} to false
					set {ftb_9.%loop-player's uuid%} to false
					set {ftb_10.%loop-player's uuid%} to false
					set {ftb_11.%loop-player's uuid%} to false
					#Courses
					set {courses_boat_timer_status.%loop-player's uuid%} to false
					set {courses_boat_timer.%loop-player's uuid%} to 0
					set {courses_boat.%loop-player's uuid%} to "Start"
					set {courses_boat_timer.%loop-player's uuid%} to 0
					set {courses_boat_timer_status} to false
					set {courses_pied.%loop-player's uuid%} to "Start"
					set {courses_pied_timer.%loop-player's uuid%} to 0
					set {courses_pied_timer_section.%loop-player's uuid%} to 0
					set {courses_pied_timer_status.%loop-player's uuid%} to false
					set {courses_pied_timer_status} to false
					set {courses_trident.%loop-player's uuid%} to "Start"
					set {courses_trident_timer.%loop-player's uuid%} to 0
					set {courses_trident_timer_section.%loop-player's uuid%} to 0
					set {courses_trident_timer_status.%loop-player's uuid%} to false
					set {has_trident.%loop-player's uuid%} to false
					set {courses_trident_timer_status} to false
					#Laby
					set {laby_level.%loop-player's uuid%} to "Start"
					#Bow PVP
					set {health.%loop-player's uuid%} to 10
					#Spawn
					set the maximum health of loop-player to 10
					heal loop-player
					reveal hidden players of loop-player
					if loop-player has permission "theevent580.staff":
						send "[&4Admin&r] Game Skipped" to loop-player
						send "[&4Admin&r] Event state : &e%{event_state}%&r --> &aIntermission" to loop-player
						set {event_state} to "Intermission"
				broadcast "[&4Admin&r] Game has been skipped."
			make gui slot 14 with red wool named "&cNo" with lore "&rI am not sure to skip the game.":
				close player's inventory
		open the last gui for the player

command /speed <text>:
	trigger:
		if arg-1 = "up":
			if player has permission "group.spectators":
				if flying speed of player < 0.8:
					set player's flying speed to player's flying speed * 2
					set {_flyspeed} to the flying speed of player
					set  {_flyspeed} to {_flyspeed} * 10
					send "[<##1D7874>&lFly&r] Fly speed is now set to 必%{_flyspeed}%"
			else:
				set {_isplayer} to false
				loop {finished::*}:
					if loop-value is player:
						if player is not flying:
							command("fly %player% true")
						set {_isplayer} to true
						if flying speed of player < 0.8:
							set player's flying speed to player's flying speed * 2
							set {_flyspeed} to the flying speed of player
							set  {_flyspeed} to {_flyspeed} * 10
							send "[<##1D7874>&lFly&r] Fly speed is now set to 必%{_flyspeed}%"
				if {_isplayer} is false:
					send "[<##1D7874>&lFly&r] You are not in a spectator state, you cannot change you fly speed"
		else if arg-1 = "down":
			if player has permission "group.spectators":
				if flying speed of player > 0.1:
					set player's flying speed to player's flying speed / 2
					set {_flyspeed} to the flying speed of player
					set  {_flyspeed} to {_flyspeed} * 10
					send "[<##1D7874>&lFly&r] Fly speed is now set to 必%{_flyspeed}%"
			else:
				set {_isplayer} to false
				loop {finished::*}:
					if loop-value is player:
						if player is not flying:
							command("fly %player% true")
						set {_isplayer} to true
						if flying speed of player > 0.1:
							set player's flying speed to player's flying speed / 2
							set {_flyspeed} to the flying speed of player
							set  {_flyspeed} to {_flyspeed} * 10
							send "[<##1D7874>&Fly&r] Fly speed is now set to 必%{_flyspeed}%"
				if {_isplayer} is false:
					send "[<##1D7874>&lFly&r] You are not in a spectator state, you cannot change you fly speed"

on tab complete of "/speed":
	set tab completions for position 1 to "up" and "down"

command /hide [<player>] [<boolean>]:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-1 is not set:
			if arg-2 is not set:
				if {hide.%player's uuid%} is true:
					reveal player for all players
					set {hide.%player's uuid%} to false
					send "[&4Admin&r] You are now visible to other players"
				else if {hide.%player's uuid%} is not set:
					hide player from all players
					set {hide.%player's uuid%} to true
					send "[&4Admin&r] You are now invisible to other players"
				else:
					hide player from all players
					set {hide.%player's uuid%} to true
					send "[&4Admin&r] You are now invisible to other players"
			else:
				if arg-2 is true:
					hide player from all players
					set {hide.%player's uuid%} to true
					send "[&4Admin&r] You are now invisible to other players"
				else:
					reveal player for all players
					set {hide.%player's uuid%} to false
					send "[&4Admin&r] You are now visible to other players"
		else:
			if arg-2 is not set:
				if {hide.%arg-1's uuid%} is true:
					reveal arg-1 for all players
					set {hide.%arg-1's uuid%} to false
					send "[&4Admin&r] You are now visible to other players" to arg-1
				else if {hide.%arg-1's uuid%} is not set:
					hide arg-1 from all players
					set {hide.%arg-1's uuid%} to true
					send "[&4Admin&r] You are now invisible to other players" to arg-1
				else:
					hide arg-1 from all players
					set {hide.%arg-1's uuid%} to true
					send "[&4Admin&r] You are now invisible to other players" to arg-1
			else:
				if arg-2 is true:
					hide arg-1 from all players
					set {hide.%arg-1's uuid%} to true
					send "[&4Admin&r] You are now invisible to other players" to arg-1
				else:
					reveal arg-1 for all players
					set {hide.%arg-1's uuid%} to false
					send "[&4Admin&r] You are now visible to other players" to arg-1

on tab complete of "/hide":
	if tab arg-1 is set:
		set tab completions for position 2 to "true" and "false"

command /multiplier [<int>]:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-1 is not set :
			send "[&4Admin&r] Current multiplier : %{multiplier}%║"
		else:
			set {multiplier} to arg-1
			send "[&4Admin&r] New multiplier : %{multiplier}%║"

command /achivement <player> <text> <text>:
	description: Give / Remove an achivement to any player
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-2 is "give":
			if arg-3 is "Secret_Base_1":
				set {Secret_Base_1.%arg-1's uuid%} to true
				set {_time} to now formatted as "HH:mm:ss"
				set {_date} to now formatted as "dd/MM/yyyy"
				send "[<##155966>&lAchivement&r] Achivement aquired : You found the secret base in the hub ! (%{_date}% - %{_time}% GMT)" to arg-1
				set {Secret_Base_1.%arg-1's uuid%.infos} to "[<##155966>&lAchivement&r] Player %arg-1% aquired the Achivement : You found the secret base in the hub ! (%{_date}% - %{_time}% GMT)"
				loop all players:
					if loop-player has permission "group.spectators":
						send "[<##155966>&lAchivement&r] Player %arg-1% aquired the Achivement : You found the secret base in the hub ! (%{_date}% - %{_time}% GMT)" to loop-player
			if arg-3 is "Herobrine":
				set {Herobrine.%arg-1's uuid%} to true
				set {_time} to now formatted as "HH:mm:ss"
				set {_date} to now formatted as "dd/MM/yyyy"
				send "[<##155966>&lAchivement&r] Achivement aquired : You discovered Herobrine ! (%{_date}% - %{_time}% GMT)" to arg-1
				set {Herobrine.%arg-1's uuid%.infos} to "[<##155966>&lAchivement&r] Player %arg-1% aquired the Achivement : You discovered Herobrine ! (%{_date}% - %{_time}% GMT)"
				loop all players:
					if loop-player has permission "group.spectators":
						send "[<##155966>&lAchivement&r] Player %arg-1% aquired the Achivement : You discovered Herobrine ! (%{_date}% - %{_time}% GMT)" to loop-player
			if arg-3 is "HubParkour":
				set {HubParkour.%arg-1's uuid%} to true
				set {_time} to now formatted as "HH:mm:ss"
				set {_date} to now formatted as "dd/MM/yyyy"
				send "[<##155966>&lAchivement&r] Achivement aquired : You finished the Hub parkour ! (%{_date}% - %{_time}% GMT)" to arg-1
				set {HubParkour.%arg-1's uuid%.infos} to "[<##155966>&lAchivement&r] Player %arg-1% aquired the Achivement : You finished the Hub parkour ! (%{_date}% - %{_time}% GMT)"
				loop all players:
					if loop-player has permission "group.spectators":
						send "[<##155966>&lAchivement&r] Player %arg-1% aquired the Achivement : You finished the Hub parkour ! (%{_date}% - %{_time}% GMT)" to loop-player
			if arg-3 is "1SecBM":
				set {1SecBM.%arg-1's uuid%} to true
				set {_time} to now formatted as "HH:mm:ss"
				set {_date} to now formatted as "dd/MM/yyyy"
				send "[<##155966>&lAchivement&r] Achivement aquired : Finishing the Build Master 1 second before the end ! (%{_date}% - %{_time}% GMT)" to arg-1
				set {1SecBM.%arg-1's uuid%.infos} to "[<##155966>&lAchivement&r] Player %arg-1% aquired the Achivement : Finishing the Build Master 1 second before the end ! (%{_date}% - %{_time}% GMT)"
				loop all players:
					if loop-player has permission "group.spectators":
						send "[<##155966>&lAchivement&r] Player %arg-1% aquired the Achivement : Finishing the Build Master 1 second before the end ! (%{_date}% - %{_time}% GMT)" to loop-player
			if arg-3 is "FBSG":
				set {FBSG.%arg-1's uuid%} to true
				set {_time} to now formatted as "HH:mm:ss"
				set {_date} to now formatted as "dd/MM/yyyy"
				send "[<##155966>&lAchivement&r] Achivement aquired : Surviving until the Final Battle in Survival Games at least once ! (%{_date}% - %{_time}% GMT)" to arg-1
				set {FBSG.%arg-1's uuid%.infos} to "[<##155966>&lAchivement&r] Player %arg-1% aquired the Achivement : Surviving until the Final Battle in Survival Games at least once ! (%{_date}% - %{_time}% GMT)"
				loop all players:
					if loop-player has permission "group.spectators":
						send "[<##155966>&lAchivement&r] Player %arg-1% aquired the Achivement : Surviving until the Final Battle in Survival Games at least once ! (%{_date}% - %{_time}% GMT)" to loop-player
		if arg-2 is "remove":
			if arg-3 is "Secret_Base_1":
				set {Secret_Base_1.%arg-1's uuid%} to false
				send "[<##155966>&lAchivement&r] Achivement removed : You found the secret base in the hub !" to arg-1
				set {Secret_Base_1.%arg-1's uuid%.infos} to "[<##155966>&lAchivement&r] Player %arg-1% does not have the Achivement : You found the secret base in the hub !"
				loop all players:
					if loop-player has permission "group.spectators":
						send "[<##155966>&lAchivement&r] Player %arg-1% got their Achivement : You found the secret base in the hub ! removed" to loop-player
			if arg-3 is "Herobrine":
				set {Herobrine.%arg-1's uuid%} to false
				send "[<##155966>&lAchivement&r] Achivement removed : You discovered Herobrine !" to arg-1
				set {Herobrine.%arg-1's uuid%.infos} to "[<##155966>&lAchivement&r] Player %arg-1% does not have the Achivement : You discovered Herobrine !"
				loop all players:
					if loop-player has permission "group.spectators":
						send "[<##155966>&lAchivement&r] Player %arg-1% got their Achivement : You discovered Herobrine ! removed" to loop-player
			if arg-3 is "HubParkour":
				set {HubParkour.%arg-1's uuid%} to false
				send "[<##155966>&lAchivement&r] Achivement removed : You finished the Hub parkour !" to arg-1
				set {HubParkour.%arg-1's uuid%.infos} to "[<##155966>&lAchivement&r] Player %arg-1% does not have the Achivement : You finished the Hub parkour !"
				loop all players:
					if loop-player has permission "group.spectators":
						send "[<##155966>&lAchivement&r] Player %arg-1% got their Achivement : You finished the Hub parkour ! removed" to loop-player
			if arg-3 is "1SecBM":
				set {1SecBM.%arg-1's uuid%} to false
				send "[<##155966>&lAchivement&r] Achivement removed : Finishing the Build Master 1 second before the end !" to arg-1
				set {1SecBM.%arg-1's uuid%.infos} to "[<##155966>&lAchivement&r] Player %arg-1% does not have the Achivement : Finishing the Build Master 1 second before the end !"
				loop all players:
					if loop-player has permission "group.spectators":
						send "[<##155966>&lAchivement&r] Player %arg-1% got their Achivement : Finishing the Build Master 1 second before the end ! removed" to loop-player
			if arg-3 is "FBSG":
				set {FBSG.%arg-1's uuid%} to false
				send "[<##155966>&lAchivement&r] Achivement removed : Surviving until the Final Battle in Survival Games at least once !" to arg-1
				set {FBSG.%arg-1's uuid%.infos} to "[<##155966>&lAchivement&r] Player %arg-1% does not have the Achivement : Surviving until the Final Battle in Survival Games at least once !"
				loop all players:
					if loop-player has permission "group.spectators":
						send "[<##155966>&lAchivement&r] Player %arg-1% got their Achivement : Surviving until the Final Battle in Survival Games at least once ! removed" to loop-player
		if arg-2 is "check":
			if arg-3 is "Secret_Base_1":
				send {Secret_Base_1.%arg-1's uuid%.infos} to player
			if arg-3 is "Herobrine":
				send {Herobrine.%arg-1's uuid%.infos} to player
			if arg-3 is "HubParkour":
				send {HubParkour.%arg-1's uuid%.infos} to player
			if arg-3 is "1SecBM":
				send {1SecBM.%arg-1's uuid%.infos} to player
			if arg-3 is "FBSG":
				send {FBSG.%arg-1's uuid%.infos} to player

on tab complete of "/achivement":
	if tab arg-1 is set:
		set tab completions for position 2 to "give", "remove" and "check"
		set tab completions for position 3 to "Secret_Base_1", "Herobrine", "HubParkour", "1SecBM" and "FBSG"

command /resetNPCs:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		resetNPCs()

command /seeblock:
	aliases: colorblind
	description: toggles the action bar to see the block and all
	trigger:
		if {check_block.%player's uuid%} is false:
			set {check_block.%player's uuid%} to true
			send "%nl%[<##1D7874>&lColorblind&r] You are now able to see the name of the block you're looking at !%nl%"
		else:
			set {check_block.%player's uuid%} to false
			send "%nl%[<##1D7874>&lColorblind&r] You can no longer see the name of the block you're looking at !%nl%"

command /wl <text> [<offline player>]:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-1 is "add":
			if arg-2 is not set:
				send "[&4Admin&r] Please enter a username"
			else:
				if arg-2 is not whitelisted:
					make player execute command "whitelist add %arg-2%"
					send "[&4Admin&r] Player %arg-2% has been added to the whitelist"
				else:
					send "[&4Admin&r] Player %arg-2% is already whitelisted"
		if arg-1 is "remove":
			if arg-2 is not set:
				send "[&4Admin&r] Please enter a username"
			else:
				if arg-2 is whitelisted:
					make player execute command "whitelist remove %arg-2%"
					send "[&4Admin&r] Player %arg-2% has been removed from the whitelist"
				else:
					send "[&4Admin&r] Player %arg-2% is already unwhitelisted"
		if arg-1 is "list":
			make player execute command "whitelist list"
			#send "[&4Admin&r] Please check the console"
		if arg-1 = "players":
			loop {players::*}:
				add loop-value to whitelist
			send "All future players have been added to the whitelist"
		if arg-1 = "spectators":
			loop {spectators::*}:
				add loop-value to whitelist
			send "All future spectators have been added to the whitelist"

on tab complete of "/wl":
	set tab completions for position 1 to "add", "remove", "players", "spectators" and "list"

command /addplayers <int>:
	permission: *
	trigger:
		add arg-1 to {checking_finished_players}

command /try:
	permission: *
	trigger:
		give 1 of carrot on a stick named "X Cross Wrong Way" to player

command /color <offline player>:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		set {arg1} to "%arg-1%"
		set {arg1.uuid} to arg-1's uuid
		set {head} to "%arg-1%" parsed as an offline player
		create a gui with virtual chest inventory with 3 rows named "New color for &f%{color.%arg-1's uuid%}%%arg-1%":
			make gui slot 4 with skull of {head} named "&f%{color.%arg-1's uuid%}%%arg-1%'s head"
			#if player has permission "group.rouge":
			#	make gui slot 5 with red concrete named "&rCurrent color : &cRed"
			#else if player has permission "group.orange":
			#	make gui slot 5 with orange concrete named "&rCurrent color : &6Orange"
			#else if player has permission "group.jaune":
			#	make gui slot 5 with yellow concrete named "&rCurrent color : &eYellow"
			#else if player has permission "group.vert":
			#	make gui slot 5 with lime concrete named "&rCurrent color : &aLime"
			#else if player has permission "group.bleu_clair":
			#	make gui slot 5 with light blue concrete named "&rCurrent color : &bLight Blue"
			#else if player has permission "group.bleu":
			#	make gui slot 5 with blue concrete named "&rCurrent color : &9Blue"
			#else if player has permission "group.violet":
			#	make gui slot 5 with purple concrete named "&rCurrent color : &5Purple"
			#else if player has permission "group.rose":
			#	make gui slot 5 with pink concrete named "&rCurrent color : &dPink"
			#else if player has permission "group.spectators":
			#	make gui slot 5 with gray concrete named "&rCurrent color : &8Spectator"
			make gui slot 10 with red concrete named "&cRed":
				close player's inventory
				if {arg-1} has permission "group.spectators":
					add 1 to {online_players}
					command("spectators remove %{arg1}%")
				command("lp user %{arg1}% parent set rouge")
				command("/team join red %{arg1}%")
				command("players add %{arg1}%")
				set {color.%{arg1.uuid}%} to "ラ&c "
				set {color.%{arg1.uuid}%.backup} to "rouge"
				if {arg1} is online:
					send "Player %{arg1}% has been set on Team &cRed&r."
				else:
					send "Player %{arg1}% has been set on Team &cRed&r. They will be set on their team the next time they join the server."
			make gui slot 11 with orange concrete named "&6Orange":
				close player's inventory
				if {arg-1} has permission "group.spectators":
					add 1 to {online_players}
					command("spectators remove %{arg1}%")
				command("lp user %{arg1}% parent set orange")
				command("/team join orange %{arg1}%")
				command("players add %{arg1}%")
				set {color.%{arg1.uuid}%} to "ャ&6 "
				set {color.%{arg1.uuid}%.backup} to "orange"
				if {arg1} is online:
					send "Player %{arg1}% has been set on Team &6Orange&r."
				else:
					send "Player %{arg1}% has been set on Team &6Orange&r. They will be set on their team the next time they join the server."
			make gui slot 19 with yellow concrete named "&eYellow":
				close player's inventory
				if {arg-1} has permission "group.spectators":
					add 1 to {online_players}
					command("spectators remove %{arg1}%")
				command("lp user %{arg1}% parent set jaune")
				command("/team join jaune %{arg1}%")
				command("players add %{arg1}%")
				set {color.%{arg1.uuid}%} to "ギ&e "
				set {color.%{arg1.uuid}%.backup} to "jaune"
				if {arg1} is online:
					send "Player %{arg1}% has been set on Team &eYellow&r."
				else:
					send "Player %{arg1}% has been set on Team &eYellow&r. They will be set on their team the next time they join the server."
			make gui slot 20 with lime concrete named "&aGreen":
				close player's inventory
				if {arg-1} has permission "group.spectators":
					add 1 to {online_players}
					command("spectators remove %{arg1}%")
				command("lp user %{arg1}% parent set vert")
				command("/team join vert %{arg1}%")
				command("players add %{arg1}%")
				set {color.%{arg1.uuid}%} to "画&a "
				set {color.%{arg1.uuid}%.backup} to "vert"
				if {arg1} is online:
					send "Player %{arg1}% has been set on Team &aGreen&r."
				else:
					send "Player %{arg1}% has been set on Team &aGreen&r. They will be set on their team the next time they join the server."
			make gui slot 15 with light blue concrete named "&bLight Blue":
				close player's inventory
				if {arg-1} has permission "group.spectators":
					add 1 to {online_players}
					command("spectators remove %{arg1}%")
				command("lp user %{arg1}% parent set bleu_clair")
				command("/team join bleu_clair %{arg1}%")
				command("players add %{arg1}%")
				set {color.%{arg1.uuid}%} to "動&b "
				set {color.%{arg1.uuid}%.backup} to "bleu_clair"
				if {arg1} is online:
					send "Player %{arg1}% has been set on Team &bLight Blue&r."
				else:
					send "Player %{arg1}% has been set on Team &bLight Blue&r. They will be set on their team the next time they join the server."
			make gui slot 16 with blue concrete named "&9Blue":
				close player's inventory
				if {arg-1} has permission "group.spectators":
					add 1 to {online_players}
					command("spectators remove %{arg1}%")
				command("lp user %{arg1}% parent set bleu")
				command("/team join bleu %{arg1}%")
				command("players add %{arg1}%")
				set {color.%{arg1.uuid}%} to "像&9 "
				set {color.%{arg1.uuid}%.backup} to "bleu"
				if {arg1} is online:
					send "Player %{arg1}% has been set on Team &9Blue&r."
				else:
					send "Player %{arg1}% has been set on Team &9Blue&r. They will be set on their team the next time they join the server."
			make gui slot 24 with purple concrete named "&5Purple":
				close player's inventory
				if {arg-1} has permission "group.spectators":
					add 1 to {online_players}
					command("spectators remove %{arg1}%")
				command("lp user %{arg1}% parent set violet")
				command("/team join violet %{arg1}%")
				command("players add %{arg1}%")
				set {color.%{arg1.uuid}%} to "の&5 "
				set {color.%{arg1.uuid}%.backup} to "violet"
				if {arg1} is online:
					send "Player %{arg1}% has been set on Team &5Purple&r."
				else:
					send "Player %{arg1}% has been set on Team &5Purple&r. They will be set on their team the next time they join the server."
			make gui slot 25 with pink concrete named "&dPink":
				close player's inventory
				if {arg-1} has permission "group.spectators":
					add 1 to {online_players}
					command("spectators remove %{arg1}%")
				command("lp user %{arg1}% parent set rose")
				command("/team join rose %{arg1}%")
				command("players add %{arg1}%")
				set {color.%{arg1.uuid}%} to "目&d "
				set {color.%{arg1.uuid}%.backup} to "rose"
				if {arg1} is online:
					send "Player %{arg1}% has been set on Team &dPink&r."
				else:
					send "Player %{arg1}% has been set on Team &dPink&r. They will be set on their team the next time they join the server."
			make gui slot 22 with gray concrete named "&8Spectator":
				close player's inventory
				if {arg1} doesn't have permission "group.spectators":
					if {arg1} is online:
						remove 1 from {online_players}
				command("lp user %{arg1}% parent set spectators")
				command("/team join spectators %{arg1}%")
				command("players remove %{arg1}%")
				command("spectators add %{arg1}%")
				set {color.%{arg1.uuid}%} to "露&8 "
				set {color.%{arg1.uuid}%.backup} to "spectators"
				if {arg1} is online:
					send "Player %{arg1}% has been set on Team &8Spectator&r."
				else:
					send "Player %{arg1}% has been set on Team &8Spectator&r. They will be set on their team the next time they join the server."
		open the last gui for the player

command /end:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		loop all players:
			if loop-player doesn't have permission "group.spectators":
				kick loop-player due to "[<##155966>&lServer&r] TheEvent580 is over, thanks for playing and see you soon !"
				command("wl remove %loop-player%")
		set {event_timer} to false
		set {event_timer_second} to 0
		set {event_timer_minute} to 0
		set {event_timer_hour} to 0

command /grab <player> <player>:
	permission: *
	permission message: &cThis command does not exist
	trigger:
		if arg-1 != arg-2:
			if {ride.%arg-1's uuid%} is set:
				clear {ride.%arg-1's uuid%}
			else:
				set {ride.%arg-1's uuid%} to arg-2
				make arg-1 ride arg-2
				send "[<##1D7874>&lMinecart&r] You grabbed %{color.%arg-1's uuid%}% %arg-1%&r !" to arg-2
				send "[<##1D7874>&lMinecart&r] You've been grabbed by %{color.%arg-2's uuid%}% %arg-2%&r !" to arg-1
		else:
			send "[<##1D7874>&lMinecart&r] You cannot grab yourself" to arg-1

command /seepoints <player>:
	permission: *
	trigger:
		send {points.%arg-1's uuid%} to player

command /uuid <offline player>:
	permission: *
	trigger:
		send "Here is %arg-1%'s uuid : %arg-1's uuid%<reset>"

command /refill <text> <text> <integer>:
	permission: *
	trigger:
		if arg-1 = "red":
			if arg-2 = "concrete":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 74 133 5069 69 131 5066 red_concrete")
					command("execute in minecraft:build_masters run fill 73 131 5070 70 133 5065 red_concrete")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 74 138 5069 69 136 5066 red_concrete")
					command("execute in minecraft:build_masters run fill 73 136 5070 70 138 5065 red_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 33 133 4930 38 131 4933 red_terracotta")
					command("execute in minecraft:build_masters run fill 34 133 4929 37 131 4934 red_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 33 138 4930 38 136 4933 red_terracotta")
					command("execute in minecraft:build_masters run fill 34 138 4929 37 136 4934 red_terracotta")
		if arg-1 = "orange":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 61 131 5070 58 133 5065 orange_concrete")
					command("execute in minecraft:build_masters run fill 62 131 5069 57 133 5066 orange_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 61 136 5070 58 138 5065 orange_concrete")
					command("execute in minecraft:build_masters run fill 62 136 5069 57 138 5066 orange_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 45 133 4930 50 131 4933 orange_terracotta")
					command("execute in minecraft:build_masters run fill 46 133 4929 49 131 4934 orange_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 45 138 4930 50 136 4933 orange_terracotta")
					command("execute in minecraft:build_masters run fill 46 138 4929 49 136 4934 orange_terracotta")
		if arg-1 = "yellow":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 45 133 5066 50 131 5069 yellow_concrete")
					command("execute in minecraft:build_masters run fill 49 133 5070 46 131 5065 yellow_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 45 138 5066 50 136 5069 yellow_concrete")
					command("execute in minecraft:build_masters run fill 49 138 5070 46 136 5065 yellow_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 57 133 4930 62 131 4933 yellow_terracotta")
					command("execute in minecraft:build_masters run fill 58 133 4929 61 131 4934 yellow_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 57 138 4930 62 136 4933 yellow_terracotta")
					command("execute in minecraft:build_masters run fill 58 138 4929 61 136 4934 yellow_terracotta")
		if arg-1 = "lime":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 38 133 5069 33 131 5066 lime_concrete")
					command("execute in minecraft:build_masters run fill 37 133 5065 34 131 5070 lime_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 38 138 5069 33 136 5066 lime_concrete")
					command("execute in minecraft:build_masters run fill 37 138 5065 34 136 5070 lime_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 69 133 4930 74 131 4933 lime_terracotta")
					command("execute in minecraft:build_masters run fill 70 133 4929 73 131 4934 lime_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 69 138 4930 74 136 4933 lime_terracotta")
					command("execute in minecraft:build_masters run fill 70 138 4929 73 136 4934 lime_terracotta")
		if arg-1 = "green":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 74 133 5083 69 131 5080 green_concrete")
					command("execute in minecraft:build_masters run fill 70 133 5079 73 131 5084 green_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 74 138 5083 69 136 5080 green_concrete")
					command("execute in minecraft:build_masters run fill 70 138 5079 73 136 5084 green_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 33 133 4916 38 131 4919 green_terracotta")
					command("execute in minecraft:build_masters run fill 34 133 4915 37 131 4920 green_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 33 138 4916 38 136 4919 green_terracotta")
					command("execute in minecraft:build_masters run fill 34 138 4915 37 136 4920 green_terracotta")
		if arg-1 = "cyan":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 62 133 5083 57 131 5080 cyan_concrete")
					command("execute in minecraft:build_masters run fill 61 133 5084 58 131 5079 cyan_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 62 138 5083 57 136 5080 cyan_concrete")
					command("execute in minecraft:build_masters run fill 61 138 5084 58 136 5079 cyan_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 45 133 4916 50 131 4919 cyan_terracotta")
					command("execute in minecraft:build_masters run fill 46 133 4915 49 131 4920 cyan_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 45 138 4916 50 136 4919 cyan_terracotta")
					command("execute in minecraft:build_masters run fill 46 138 4915 49 136 4920 cyan_terracotta")
		if arg-1 = "lightblue":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 50 133 5083 45 131 5080 light_blue_concrete")
					command("execute in minecraft:build_masters run fill 49 133 5084 46 131 5079 light_blue_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 50 138 5083 45 136 5080 light_blue_concrete")
					command("execute in minecraft:build_masters run fill 49 138 5084 46 136 5079 light_blue_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 57 133 4916 62 131 4919 light_blue_terracotta")
					command("execute in minecraft:build_masters run fill 58 133 4915 61 131 4920 light_blue_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 57 138 4916 62 136 4919 light_blue_terracotta")
					command("execute in minecraft:build_masters run fill 58 138 4915 61 136 4920 light_blue_terracotta")
		if arg-1 = "blue":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 38 133 5083 33 131 5080 blue_concrete")
					command("execute in minecraft:build_masters run fill 37 133 5084 34 131 5079 blue_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 38 138 5083 33 136 5080 blue_concrete")
					command("execute in minecraft:build_masters run fill 37 138 5084 34 136 5079 blue_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 69 133 4916 74 131 4919 blue_terracotta")
					command("execute in minecraft:build_masters run fill 70 133 4915 73 131 4920 blue_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 69 138 4916 74 136 4919 blue_terracotta")
					command("execute in minecraft:build_masters run fill 70 138 4915 73 136 4920 blue_terracotta")
		if arg-1 = "purple":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 74 133 5097 69 131 5094 purple_concrete")
					command("execute in minecraft:build_masters run fill 73 133 5098 70 131 5093 purple_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 74 138 5097 69 136 5094 purple_concrete")
					command("execute in minecraft:build_masters run fill 73 138 5098 70 136 5093 purple_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 33 131 4902 38 133 4905 purple_terracotta")
					command("execute in minecraft:build_masters run fill 34 133 4901 37 131 4906 purple_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 33 136 4902 38 138 4905 purple_terracotta")
					command("execute in minecraft:build_masters run fill 34 138 4901 37 136 4906 purple_terracotta")
		if arg-1 = "magenta":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 62 133 5097 57 131 5094 magenta_concrete")
					command("execute in minecraft:build_masters run fill 61 133 5098 58 131 5093 magenta_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 62 138 5097 57 136 5094 magenta_concrete")
					command("execute in minecraft:build_masters run fill 61 138 5098 58 136 5093 magenta_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 45 131 4902 50 133 4905 magenta_terracotta")
					command("execute in minecraft:build_masters run fill 46 133 4901 49 131 4906 magenta_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 45 136 4902 50 138 4905 magenta_terracotta")
					command("execute in minecraft:build_masters run fill 46 138 4901 49 136 4906 magenta_terracotta")
		if arg-1 = "pink":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 50 133 5097 45 131 5094 pink_concrete")
					command("execute in minecraft:build_masters run fill 49 133 5098 46 131 5093 pink_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 50 138 5097 45 136 5094 pink_concrete")
					command("execute in minecraft:build_masters run fill 49 138 5098 46 136 5093 pink_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 57 131 4902 62 133 4905 pink_terracotta")
					command("execute in minecraft:build_masters run fill 58 133 4901 61 131 4906 pink_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 57 136 4902 62 138 4905 pink_terracotta")
					command("execute in minecraft:build_masters run fill 58 138 4901 61 136 4906 pink_terracotta")
		if arg-1 = "brown":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 38 133 5097 33 131 5094 brown_concrete")
					command("execute in minecraft:build_masters run fill 37 133 5098 34 131 5093 brown_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 38 138 5097 33 136 5094 brown_concrete")
					command("execute in minecraft:build_masters run fill 37 138 5098 34 136 5093 brown_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 69 131 4902 74 133 4905 brown_terracotta")
					command("execute in minecraft:build_masters run fill 70 133 4901 73 131 4906 brown_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 69 136 4902 74 138 4905 brown_terracotta")
					command("execute in minecraft:build_masters run fill 70 138 4901 73 136 4906 brown_terracotta")
		if arg-1 = "black":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 74 133 5111 69 131 5108 black_concrete")
					command("execute in minecraft:build_masters run fill 73 133 5112 70 131 5107 black_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 74 138 5111 69 136 5108 black_concrete")
					command("execute in minecraft:build_masters run fill 73 138 5112 70 136 5107 black_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 33 131 4888 38 133 4891 black_terracotta")
					command("execute in minecraft:build_masters run fill 34 131 4887 37 133 4892 black_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 33 136 4888 38 138 4891 black_terracotta")
					command("execute in minecraft:build_masters run fill 34 136 4887 37 138 4892 black_terracotta")
		if arg-1 = "gray":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 62 133 5111 57 131 5108 gray_concrete")
					command("execute in minecraft:build_masters run fill 61 133 5112 58 131 5107 gray_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 62 138 5111 57 136 5108 gray_concrete")
					command("execute in minecraft:build_masters run fill 61 138 5112 58 136 5107 gray_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 45 131 4888 50 133 4891 gray_terracotta")
					command("execute in minecraft:build_masters run fill 46 131 4887 49 133 4892 gray_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 45 136 4888 50 138 4891 gray_terracotta")
					command("execute in minecraft:build_masters run fill 46 136 4887 49 138 4892 gray_terracotta")
		if arg-1 = "lightgray":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 50 133 5111 45 131 5108 light_gray_concrete")
					command("execute in minecraft:build_masters run fill 49 133 5112 46 131 5107 light_gray_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 50 138 5111 45 136 5108 light_gray_concrete")
					command("execute in minecraft:build_masters run fill 49 138 5112 46 136 5107 light_gray_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 57 131 4888 62 133 4891 light_gray_terracotta")
					command("execute in minecraft:build_masters run fill 58 131 4887 61 133 4892 light_gray_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 57 136 4888 62 138 4891 light_gray_terracotta")
					command("execute in minecraft:build_masters run fill 58 136 4887 61 138 4892 light_gray_terracotta")
		if arg-1 = "white":
			if arg-2 = "concrete":
				if arg-3 is 0:
					command("execute in minecraft:build_masters run fill 38 133 5111 33 131 5108 white_concrete")
					command("execute in minecraft:build_masters run fill 37 133 5112 34 131 5107 white_concrete")
				if arg-3 is 1:
					command("execute in minecraft:build_masters run fill 38 138 5111 33 136 5108 white_concrete")
					command("execute in minecraft:build_masters run fill 37 138 5112 34 136 5107 white_concrete")
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 69 131 4888 74 133 4891 white_terracotta")
					command("execute in minecraft:build_masters run fill 70 131 4887 73 133 4892 white_terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 69 136 4888 74 138 4891 white_terracotta")
					command("execute in minecraft:build_masters run fill 70 136 4887 73 138 4892 white_terracotta")
		if arg-1 = "clear":
			if arg-2 = "terracotta":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 51 131 4874 56 133 4877 terracotta")
					command("execute in minecraft:build_masters run fill 52 131 4873 55 133 4878 terracotta")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 51 136 4874 56 138 4877 terracotta")
					command("execute in minecraft:build_masters run fill 52 136 4873 55 138 4878 terracotta")
		if arg-1 = "copper":
			if arg-2 = "normal":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 120 131 4975 117 133 4980 waxed_copper_block")
					command("execute in minecraft:build_masters run fill 116 131 4976 121 133 4979 waxed_copper_block")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 120 136 4975 117 138 4980 waxed_copper_block")
					command("execute in minecraft:build_masters run fill 116 136 4976 121 138 4979 waxed_copper_block")
			if arg-2 = "exposed":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 120 131 4989 117 133 4994 waxed_exposed_copper")
					command("execute in minecraft:build_masters run fill 116 131 4990 121 133 4993 waxed_exposed_copper")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 120 136 4989 117 138 4994 waxed_exposed_copper")
					command("execute in minecraft:build_masters run fill 116 136 4990 121 138 4993 waxed_exposed_copper")
			if arg-2 = "weathered":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 120 131 5005 117 133 5010 waxed_weathered_copper")
					command("execute in minecraft:build_masters run fill 116 131 5006 121 133 5009 waxed_weathered_copper")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 120 136 5005 117 138 5010 waxed_weathered_copper")
					command("execute in minecraft:build_masters run fill 116 136 5006 121 138 5009 waxed_weathered_copper")
			if arg-2 = "oxidized":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 120 131 5019 117 133 5024 waxed_oxidized_copper")
					command("execute in minecraft:build_masters run fill 116 131 5020 121 133 5023 waxed_oxidized_copper")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 120 136 5019 117 138 5024 waxed_oxidized_copper")
					command("execute in minecraft:build_masters run fill 116 136 5020 121 138 5023 waxed_oxidized_copper")
		if arg-1 = "cutcopper":
			if arg-2 = "normal":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 134 131 4975 131 133 4980 waxed_cut_copper")
					command("execute in minecraft:build_masters run fill 130 131 4976 135 133 4979 waxed_cut_copper")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 134 136 4975 131 138 4980 waxed_cut_copper")
					command("execute in minecraft:build_masters run fill 130 136 4976 135 138 4979 waxed_cut_copper")
			if arg-2 = "exposed":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 134 131 4989 131 133 4994 waxed_exposed_cut_copper")
					command("execute in minecraft:build_masters run fill 130 131 4990 135 133 4993 waxed_exposed_cut_copper")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 134 136 4989 131 138 4994 waxed_exposed_cut_copper")
					command("execute in minecraft:build_masters run fill 130 136 4990 135 138 4993 waxed_exposed_cut_copper")
			if arg-2 = "weathered":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 134 131 5005 131 133 5010 waxed_weathered_cut_copper")
					command("execute in minecraft:build_masters run fill 130 131 5006 135 133 5009 waxed_weathered_cut_copper")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 134 136 5005 131 138 5010 waxed_weathered_cut_copper")
					command("execute in minecraft:build_masters run fill 130 136 5006 135 138 5009 waxed_weathered_cut_copper")
			if arg-2 = "oxidized":
				if arg-3 = 0:
					command("execute in minecraft:build_masters run fill 134 131 5019 131 133 5024 waxed_oxidized_cut_copper")
					command("execute in minecraft:build_masters run fill 130 131 5020 135 133 5023 waxed_oxidized_cut_copper")
				if arg-3 = 1:
					command("execute in minecraft:build_masters run fill 134 136 5019 131 138 5024 waxed_oxidized_cut_copper")
					command("execute in minecraft:build_masters run fill 130 136 5020 135 138 5023 waxed_oxidized_cut_copper")

on tab complete of "/refill":
	set tab completions for position 1 to "red", "orange", "yellow", "lime", "green", "cyan", "lightblue", "blue", "purple", "magenta", "pink", "brown", "black", "gray", "lightgray", "white", "clear", "copper" and "cutcopper"
	if tab arg-1 = "copper" or "cutcopper":
		set tab completions for position 2 to "normal", "exposed", "weathered" and "oxidized"
	else if tab arg-1 = "clear":
		set tab completions for position 2 to "terracotta"
	else:
		set tab completions for position 2 to "concrete" and "terracotta"
	set tab completions for position 3 to 0 and 1

command /refillall:
	permission: *
	trigger:
		refillAll()

command /hasfinished <player>:
	permission: *
	trigger:
		send "%{finished.%arg-1's uuid%}%" to sender

command /isalive <player>:
	permission: *
	trigger:
		send "%{alive.%arg-1's uuid%}%" to sender

#command /wb:
#	permission: *
#	trigger:
#		send "%{sg.wb}%" to sender

command /codes:
	permission: theevent580.staff
	trigger:
		send "Here are the list of codes on why something ended :" to sender
		send "Code -1 : Crash somewhere, probably" to sender
		send "Code 0 : Event has reset" to sender
		send "Code 1 : Game ended with overall timer being (00:00)" to sender
		send "Code 2 : Game ended because the game end condition was met" to sender
		send "Code 3 : Game ended because everyone finished" to sender
		send "Code 4 : Game ended because all indiv timer was 0 OR players have finished" to sender

command /leaderboard:
	aliases: lb
	trigger:
		if player doesn't have permission "*":
			if {jeu} = 0:
				send "<##2395A9>No games have been played yet."
			else if {timer} = 10:
				send "<##2395A9>You cannot see the leaderboard as the winner hasn't been anounced yet."
			else if world of player isn't "world":
				send "<##2395A9>You cannot check the leaderboard while being in a game."
			else:
				seeLeaderboard(executor)
		else:
			seeLeaderboard(executor)

command /getplayertime <player>:
	permission: group.spectators
	trigger:
		if {timer_minute.%arg-1's uuid%} < 0:
			send "%{color.%arg-1's uuid%}%%arg-1%&r is out of time"
		else:
			send "%{color.%arg-1's uuid%}%%arg-1%&r has %minuteSecond({timer_minute.%arg-1's uuid%}*60+{timer_second.%arg-1's uuid%})% left"

command /settroll:
	permission: *
	trigger:
		command("execute in minecraft:races_lap_3 positioned 8 136 -83 as @e[type=minecraft:block_display,limit=4,sort=nearest] run kill @s")
		command("execute in minecraft:races_lap_3 run summon minecraft:block_display 9.0 135.00 -84.0 {block_state:{Name:""minecraft:stone""}}")
		command("execute in minecraft:races_lap_3 run summon minecraft:block_display 8.0 135.00 -84.0 {block_state:{Name:""minecraft:stone""}}")
		command("execute in minecraft:races_lap_3 run summon minecraft:block_display 9.0 136.00 -83.0 {block_state:{Name:""minecraft:stone""}}")
		command("execute in minecraft:races_lap_3 run summon minecraft:block_display 8.0 136.00 -83.0 {block_state:{Name:""minecraft:stone""}}")
		
command /endnpc:
	permission: *
	trigger:
		endNPCs()

command /setbossbar <text> <int> <boolean = false>:
	permission: *
	trigger:
		bossbarRefill(arg-1, arg-2, arg-3)

command /resetparkour:
	permission: *
	trigger:
		resetParkour()
		send "Parkour leaderboard has been reset"

command /updateIndiv:
	permission: *
	trigger:
		updateIndiv()
		send "Individual Placement has been updated"

command /state <boolean>:
	permission: *
	trigger:
		set {debug.%player's uuid%} to arg-1

command /spectators <text> [<offline player>]:
	permission: *
	trigger:
		if arg-1 = "add":
			if {spectators::*} doesn't contain arg-2:
				add arg-2 to {spectators::*}
				send "Player %arg-2% has been added to the spectator list"
			else:
				send "This player was already in the spectator list"
		else if arg-1 = "remove":
			if {spectators::*} contains arg-2:
				remove arg-2 from {spectators::*}
				send "Player %arg-2% has been removed from the spectator list"
			else:
				send "This player wasn't in the spectator list"
		else if arg-1 = "list":
			send "Here are all the spectators (%size of {spectators::*}%):"
			loop {spectators::*}:
				send "- %loop-value%"
		else if arg-1 = "clear":
			clear {spectators::*}
			send "The spectators list has been cleared."

on tab complete of "/spectators":
	set tab completions for position 1 to "add", "remove", "clear" and "list"

command /players <text> [<offline player>]:
	permission: *
	trigger:
		if arg-1 = "add":
			if {players::*} doesn't contain arg-2:
				add arg-2 to {players::*}
				send "Player %arg-2% has been added to the players list"
			else:
				send "This player was already in the players list"
		else if arg-1 = "remove":
			if {players::*} contains arg-2:
				remove arg-2 from {players::*}
				send "Player %arg-2% has been removed from the players list"
			else:
				send "This player wasn't in the players list"
		else if arg-1 = "list":
			send "Here are all the players (%size of {players::*}%):"
			loop {players::*}:
				send "- %loop-value%"
		else if arg-1 = "clear":
			clear {players::*}
			send "The players list has been cleared."

on tab complete of "/players":
	set tab completions for position 1 to "add", "remove", "clear" and "list"

command /sub <offline player> <offline player>:
	permission: *
	trigger:
		set {color.%arg-2's uuid%.backup} to {color.%arg-1's uuid%.backup}
		setPlayerTeamWithBackup(arg-2)
		set {points.%arg-2's uuid%} to {points.%arg-1's uuid%}
		set {points_game.%arg-2's uuid%} to {points_game.%arg-1's uuid%}
		add {total_points.%arg-1's uuid%} to {total_points.%arg-2's uuid%}
		set {alive.%arg-2's uuid%} to true
		set {finished.%arg-2's uuid%} to false
		command("fly %arg-2% false")
		command("hide %arg-2% false")
		broadcast "Player %{color.%arg-2's uuid%}%%arg-2%&r has replaced Player %{color.%arg-1's uuid%}%%arg-1%&r."

command /pridecolor <player> <text>:
	permission: *
	trigger:
		if arg-2 = "rainbow", "rainbow_wave", "lesbian", "gay", "bisexual", "transgender", "pride", "pansexual", "asexual", "aromantic", "non_binary" or "rainbow_iter" or "clear":
			if arg-2 = "rainbow":
				command("customcolor %arg-1's name% RAINBOW")
				set {color.%arg-1's uuid%} to "%the first character of {color.%arg-1's uuid%}%<##f0f01c> "
				set {_color} to colored "<##f0f01c>"
			else if arg-2 = "rainbow_wave":
				command("customcolor %arg-1's name% RAINBOW_WAVE")
				set {color.%arg-1's uuid%} to "%the first character of {color.%arg-1's uuid%}%<##f0f084> "
				set {_color} to colored "<##f0f084>"
			else if arg-2 = "rainbow_iter":
				command("customcolor %arg-1's name% RAINBOW_ITER")
				set {color.%arg-1's uuid%} to "%the first character of {color.%arg-1's uuid%}%<##f0f088> "
				set {_color} to colored "<##f0f088>"
			else if arg-2 = "lesbian":
				command("customcolor %arg-1's name% LESBIAN")
				set {color.%arg-1's uuid%} to "%the first character of {color.%arg-1's uuid%}%<##f0f040> "
				set {_color} to colored "<##f0f040>"
			else if arg-2 = "gay":
				command("customcolor %arg-1's name% GAY")
				set {color.%arg-1's uuid%} to "%the first character of {color.%arg-1's uuid%}%<##f0f044> "
				set {_color} to colored "<##f0f044>"
			else if arg-2 = "bisexual":
				command("customcolor %arg-1's name% BISEXUAL")
				set {color.%arg-1's uuid%} to "%the first character of {color.%arg-1's uuid%}%<##f0f048> "
				set {_color} to colored "<##f0f048>"
			else if arg-2 = "transgender":
				command("customcolor %arg-1's name% TRANSGENDER")
				set {color.%arg-1's uuid%} to "%the first character of {color.%arg-1's uuid%}%<##f0f04c> "
				set {_color} to colored "<##f0f04c>"
			else if arg-2 = "pride":
				command("customcolor %arg-1's name% PRIDE")
				set {color.%arg-1's uuid%} to "%the first character of {color.%arg-1's uuid%}%<##f0f050> "
				set {_color} to colored "<##f0f050>"
			else if arg-2 = "pansexual":
				command("customcolor %arg-1's name% PANSEXUAL")
				set {color.%arg-1's uuid%} to "%the first character of {color.%arg-1's uuid%}%<##f0f054> "
				set {_color} to colored "<##f0f054>"
			else if arg-2 = "asexual":
				command("customcolor %arg-1's name% ASEXUAL")
				set {color.%arg-1's uuid%} to "%the first character of {color.%arg-1's uuid%}%<##f0f058> "
				set {_color} to colored "<##f0f058>"
			else if arg-2 = "aromantic":
				command("customcolor %arg-1's name% AROMANTIC")
				set {color.%arg-1's uuid%} to "%the first character of {color.%arg-1's uuid%}%<##f0f05c> "
				set {_color} to colored "<##f0f05c>"
			else if arg-2 = "non_binary":
				command("customcolor %arg-1's name% NON_BINARY")
				set {color.%arg-1's uuid%} to "%the first character of {color.%arg-1's uuid%}%<##f0f060> "
				set {_color} to colored "<##f0f060>"
			else if arg-2 = "clear":
				command("customcolor %arg-1's name% TEXT")
				setPlayerTeamWithBackup(arg-1)
			send colored "Color has been changed to %{color.%arg-1's uuid%}%%arg-2%&r for %arg-1%"
		else:
			send "&cThis color doesn't exist"

on tab complete of "/pridecolor":
	set tab completions for position 2 to "rainbow", "rainbow_wave", "lesbian", "gay", "bisexual", "transgender", "pride", "pansexual", "asexual", "aromantic", "non_binary" and "rainbow_iter"